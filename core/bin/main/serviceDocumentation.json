{
  "openapi" : "3.0.0",
  "paths" : {
    "/invoke-service?serviceName=setCurrentFloor" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "newFloor" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setCurrentFloor",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "newFloor",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=beliefNotificationCallback" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "bindings" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "beliefNotificationCallback",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "bindings",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interact" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "otherActor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "expectTrades" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interact",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "otherActor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "expectTrades",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=senseNewMap" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "senseNewMap",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setCheckInHeaderMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setCheckInHeaderMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBatteryWarnLevel" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "warnLevel" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBatteryWarnLevel",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "warnLevel",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerAIListener" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "al" : {
                    "type" : {
                      "type" : "ActionListener"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerAIListener",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "al",
          "schema" : {
            "type" : "ActionListener"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setObservation" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "observation" : {
                    "type" : {
                      "type" : "Object"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setObservation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "observation",
          "schema" : {
            "type" : "Object"
          }
        } ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startGame" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startGame",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unityReceiveMessage" : {
      "post" : {
        "summary" : "Operation in UnityAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "msg" : {
                    "type" : {
                      "type" : "Message"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unityReceiveMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "msg",
          "schema" : {
            "type" : "Message"
          }
        } ],
        "tags" : [ "UnityAgent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopType" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopType",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeState" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeState",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "prompt" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "model",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "prompt",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=teleport" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "distance" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "targetY" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "targetX" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "teleport",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "targetX",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "targetY",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "distance",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPoseGlobalQuat" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPoseGlobalQuat",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkInKiosk" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkInKiosk",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setVels" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tv" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "rv" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setVels",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tv",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "rv",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesBroken" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesBroken",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=changeLearningExecution" : {
      "post" : {
        "summary" : "Operation in ActionLearning",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "status" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "changeLearningExecution",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "status",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ActionLearning" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=applyPragmaticMeaning" : {
      "post" : {
        "summary" : "Operation in PragmaticsInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "applyPragmaticMeaning",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "utterance",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "PragmaticsInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerForDialogueHistoryNotifications" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerForDialogueHistoryNotifications",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=breakBlock" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "breakBlock",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getRepositionFailure" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getRepositionFailure",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateActionLearning" : {
      "post" : {
        "summary" : "Operation in ActionLearning",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "newAction" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "status" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateActionLearning",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "newAction",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "status",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ActionLearning" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAllowAppointmentsUntil" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAllowAppointmentsUntil",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "time",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorExitPose" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "padding" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorExitPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "elevatorDoor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "padding",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=displayFace" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "displayFace",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=removeActionsWithSignature" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actionSignature" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "removeActionsWithSignature",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actionSignature",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=takeSnapshot" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "takeSnapshot",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=freezeTemi" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "freezeTemi",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isBreakable" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locx" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "locy" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isBreakable",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "locx",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "locy",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pressObject" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "group_name" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "refID" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pressObject",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "group_name",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "refID",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentPosition" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentPosition",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=undock" : {
      "post" : {
        "summary" : "Operation in DockingInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "undock",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "DockingInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endAcknowledgeDisplay" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endAcknowledgeDisplay",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setKioskLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setKioskLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=followMeBlocking" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "followMeBlocking",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=openHand" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "openHand",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopAllSearches" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopAllSearches",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForUtterance" : {
      "post" : {
        "summary" : "Operation in ListenerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForUtterance",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ListenerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=afterServiceWrapper" : {
      "post" : {
        "summary" : "Operation in TradeServiceTracker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "args" : {
                    "type" : {
                      "type" : "Object[]"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "afterServiceWrapper",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "args",
          "schema" : {
            "type" : "Object[]"
          }
        } ],
        "tags" : [ "TradeServiceTracker" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=translate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "contextID" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "translate",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "contextID",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPose" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "linkName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "linkName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMEndpoint" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "endpoint" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMEndpoint",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "endpoint",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setVolume" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "volume" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setVolume",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "volume",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getObservers" : {
      "post" : {
        "summary" : "Operation in ObserverDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "obs" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getObservers",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "obs",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ObserverDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=ledOn" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "ledOn",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesOff" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesOff",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeExploration" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "explorationToTry" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeExploration",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "explorationToTry",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=smoothMove" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "direction" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "smoothMove",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "direction",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEntityForReference" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "entityJavaType" : {
                    "type" : {
                      "type" : "Class"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEntityForReference",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "ref",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "entityJavaType",
          "schema" : {
            "type" : "Class"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getViolations" : {
      "post" : {
        "summary" : "Operation in NormComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "stateMachine" : {
                    "type" : {
                      "type" : "StateMachine"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getViolations",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "stateMachine",
          "schema" : {
            "type" : "StateMachine"
          }
        } ],
        "tags" : [ "NormComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getOperator" : {
      "post" : {
        "summary" : "Operation in OperatorDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "inputRoleTypes" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "type" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getOperator",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "inputRoleTypes",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "OperatorDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertRule" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "head" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "body" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertRule",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "head",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "body",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=playVideo" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "playVideo",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getVels" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getVels",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDescriptors" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "Long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDescriptors",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "Long"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getImageSize" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getImageSize",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goEast" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goEast",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=suspendGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "suspendGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkMotion" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "aid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkMotion",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "aid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableButtons" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableButtons",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPosture" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPosture",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertPredToReadable" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "predString" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertPredToReadable",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "predString",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=placeItem" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "itemSymbol" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "placeItem",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "itemSymbol",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=trade" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tradeRecipe" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "traderID" : {
                    "type" : {
                      "type" : "Integer"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "trade",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "traderID",
          "schema" : {
            "type" : "Integer"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "tradeRecipe",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addLocalStaticTransform" : {
      "post" : {
        "summary" : "Operation in CoordinateFramesInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "parent" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "transform" : {
                    "type" : {
                      "type" : "Matrix4d"
                    }
                  },
                  "child" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addLocalStaticTransform",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "parent",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "child",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "transform",
          "schema" : {
            "type" : "Matrix4d"
          }
        } ],
        "tags" : [ "CoordinateFramesInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryLastTime" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryLastTime",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deactivatePattern" : {
      "post" : {
        "summary" : "Operation in PatternMatchingParser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "patternName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deactivatePattern",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "patternName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "PatternMatchingParser" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLastObservation" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLastObservation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeTrajectory" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "trajectoryName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeTrajectory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "trajectoryName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=freeze" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "freeze",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getOnDeckText" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getOnDeckText",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=angleInterpolation" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "names" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "angles" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "isAbsolute" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "time" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "angleInterpolation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "names",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "angles",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "time",
          "schema" : {
            "type" : "float"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "isAbsolute",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startPR2Repair" : {
      "post" : {
        "summary" : "Operation in UnityPR2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "target" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startPR2Repair",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "target",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnityPR2" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayAnimated" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "annotatedText" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayAnimated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "annotatedText",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=reportRecognizedSpeech" : {
      "post" : {
        "summary" : "Operation in ListenerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "input" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "reportRecognizedSpeech",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "input",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "ListenerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterForNewPropertyNotification" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterForNewPropertyNotification",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterForNotification" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queryTerm" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterForNotification",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "queryTerm",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=spaceStationLLMParser" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "spaceStationLLMParser",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "utterance",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setGrammar" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setGrammar",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addRelevantDisplayAction" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addRelevantDisplayAction",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDoorEdges" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "door" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDoorEdges",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "door",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=positReference" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "propertiesList" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "positReference",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "propertiesList",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setKioskTimeout" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "timeout" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setKioskTimeout",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "timeout",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveCurrentLocationsAsBackupSet" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveCurrentLocationsAsBackupSet",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "collectionName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeBroken" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeBroken",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tube",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEEPose" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEEPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getStatusFromRef" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getStatusFromRef",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "refId",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=makeContextSalient" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "makeContextSalient",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "id",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocationFromFirebase" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocationFromFirebase",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "locationName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getText" : {
      "post" : {
        "summary" : "Operation in SimSpeechProductionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ts" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getText",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "ts",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "SimSpeechProductionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onAgentActionUpdated" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "goal" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "status" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onAgentActionUpdated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "status",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getConfigFile" : {
      "post" : {
        "summary" : "Operation in MaryTTSComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getConfigFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MaryTTSComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableButtons" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableButtons",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDisparityFrame" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDisparityFrame",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=nameDescriptors" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptors" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "typeName" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "nameDescriptors",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "descriptors",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "typeName",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=uploadMap" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "overwrite" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "uploadMap",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "overwrite",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateFirebaseDialogueHistory" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "u" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateFirebaseDialogueHistory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "u",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=newConsultantCallback" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tsi" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "newConsultantCallback",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tsi",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stylizeUnitySpeak" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "original" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stylizeUnitySpeak",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "original",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restoreLocationsFromBackup" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "documentName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restoreLocationsFromBackup",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "documentName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionsByEffect" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "effect" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionsByEffect",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "effect",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForDetection" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForDetection",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=injectDictionaryEntry" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "morpheme" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "cognitiveStatus" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "semantics" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "type" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "injectDictionaryEntry",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "morpheme",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "semantics",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "cognitiveStatus",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCheckInHeaderMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCheckInHeaderMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=generateExplorationsToTry" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "objectNovelty" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "generateExplorationsToTry",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "objectNovelty",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setConfig" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setConfig",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=displayFreezeScreen" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "displayFreezeScreen",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isRepeatedPredicate" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "listener" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "state" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "word" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "recency" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isRepeatedPredicate",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "word",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "listener",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "recency",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeFacingObject" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeFacingObject",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initializeRL" : {
      "post" : {
        "summary" : "Operation in PolycraftRLComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "failedAction" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initializeRL",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "failedAction",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "PolycraftRLComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorEnterPosePath" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "padding" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorEnterPosePath",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "elevatorDoor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "padding",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=parseUtterance" : {
      "post" : {
        "summary" : "Operation in PatternMatchingParser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "u" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "parseUtterance",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "u",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "PatternMatchingParser" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startType" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startType",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionsBySignature" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actionSignature" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionsBySignature",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actionSignature",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getVisionAssertions" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getVisionAssertions",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=knowsLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "knowsLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setStiffness" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "stiffness" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setStiffness",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "stiffness",
          "schema" : {
            "type" : "float"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActor" : {
      "post" : {
        "summary" : "Operation in AgentModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActor",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "AgentModel" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=closeHand" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "closeHand",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=savePosesToFile" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "savePosesToFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoalWithMetric" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metric" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "g" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoalWithMetric",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "g",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "metric",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=welcome" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "welcome",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateRobotPose" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateRobotPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelMotion" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "aid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelMotion",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "aid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBirthdayMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBirthdayMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBirthdayMessageRange" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "range" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBirthdayMessageRange",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "range",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedToPlanPolicy" : {
      "post" : {
        "summary" : "Operation in FailedToPlanPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "goal" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "brokenActionSignature" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "failureReasons" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedToPlanPolicy",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "brokenActionSignature",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "failureReasons",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "FailedToPlanPolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=clearScreen" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "clearScreen",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeEquality" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeEquality",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isDiarcAgent" : {
      "post" : {
        "summary" : "Operation in Database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agentRef" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isDiarcAgent",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "agentRef",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "Database" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initializeNovelty" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "novelty" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initializeNovelty",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "novelty",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptWaitingForUtterance" : {
      "post" : {
        "summary" : "Operation in ListenerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptWaitingForUtterance",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ListenerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEscortWaitDuration" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEscortWaitDuration",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPixelPositionInRobotFrame" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pX" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "width" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "pY" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "camID" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "height" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPixelPositionInRobotFrame",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "pX",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "pY",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "width",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "height",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "camID",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalId" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goal" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalId",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=graspObject" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "refId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "position" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "graspObject",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "refId",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "float"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=requestPermissions" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "requestPermissions",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableKioskMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableKioskMode",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=nop" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "nop",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLocationBackupCollections" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLocationBackupCollections",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMModel" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "modelStr" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMModel",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "modelStr",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onActionGenerated" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : {
                      "type" : "ActionDBEntry"
                    }
                  },
                  "onStartup" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onActionGenerated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "action",
          "schema" : {
            "type" : "ActionDBEntry"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "onStartup",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateDialogueHistory" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utt" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateDialogueHistory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "utt",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedReturnValuePolicy" : {
      "post" : {
        "summary" : "Operation in FailedReturnValuePolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "goal" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "brokenActionSignature" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "failureReasons" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedReturnValuePolicy",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "brokenActionSignature",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "failureReasons",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "FailedReturnValuePolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getInitialDomain" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getInitialDomain",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLocationNameFromReference" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locRef" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLocationNameFromReference",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "locRef",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isCurrentlyExploring" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isCurrentlyExploring",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initAreas" : {
      "post" : {
        "summary" : "Operation in ForkliftPython",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initAreas",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ForkliftPython" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopRecordingTrajectory" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopRecordingTrajectory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractRule" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "head" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "body" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractRule",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "head",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "body",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAvailableActions" : {
      "post" : {
        "summary" : "Operation in AgentModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAvailableActions",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "AgentModel" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=playGame" : {
      "post" : {
        "summary" : "Operation in NovelRunComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "playGame",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NovelRunComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryRecency" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryRecency",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getFacts" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "memoryLevel" : {
                    "type" : {
                      "type" : "MemoryLevel"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getFacts",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "memoryLevel",
          "schema" : {
            "type" : "MemoryLevel"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGripperPosition" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGripperPosition",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isLocalized" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isLocalized",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getKnownLocationNames" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getKnownLocationNames",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=acceptUtterance" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "acceptUtterance",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorPanelPose" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "padding" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorPanelPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "elevatorDoor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "padding",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCoordinateFrames" : {
      "post" : {
        "summary" : "Operation in CoordinateFramesInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCoordinateFrames",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "CoordinateFramesInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGraphAssertions" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGraphAssertions",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goSouth" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goSouth",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=dock" : {
      "post" : {
        "summary" : "Operation in DockingInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dockId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "dock",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "dockId",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "DockingInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=rejectUtterance" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "rejectUtterance",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLateAppointmentMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLateAppointmentMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restRightArm" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restRightArm",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=closeGripper" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "closeGripper",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=learn" : {
      "post" : {
        "summary" : "Operation in LearningInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "learningTerm" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "learn",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "learningTerm",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "LearningInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goNorth" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goNorth",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cacheParse" : {
      "post" : {
        "summary" : "Operation in HybridParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cacheParse",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "utterance",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "HybridParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEmotion" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "newEmo" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEmotion",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "newEmo",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=querySupport" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "memoryLevel" : {
                    "type" : {
                      "type" : "MemoryLevel"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "querySupport",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "memoryLevel",
          "schema" : {
            "type" : "MemoryLevel"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setState" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "predicate" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setState",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "predicate",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEmotion" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEmotion",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=display" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "display",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startRecordingTrajectory" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "trajectoryName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startRecordingTrajectory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "trajectoryName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getContextForGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getContextForGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "g",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getReference" : {
      "post" : {
        "summary" : "Operation in Consultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getReference",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "refId",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "Consultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBusy" : {
      "post" : {
        "summary" : "Operation in PlanningAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "busy" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBusy",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "busy",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "PlanningAgent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPose" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "poseName" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "poseName",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chargeTemi" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chargeTemi",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDictionaryEntries" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDictionaryEntries",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setTV" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tv" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setTV",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tv",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptFollowBlocking" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptFollowBlocking",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=skipsQueue" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "funcName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "skipsQueue",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "funcName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=blink" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "blink",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=openGripper" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "openGripper",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startQRCodeDisplay" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "header" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "url" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startQRCodeDisplay",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "url",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "header",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isPassable" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "y" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isPassable",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "x",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "y",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBatteryChargedLevel" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "chargedLevel" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBatteryChargedLevel",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "chargedLevel",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerNotification" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerNotification",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=makeObservations" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "observation" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "makeObservations",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "observation",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initializeBeliefs" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initializeBeliefs",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableKidsMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableKidsMode",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=exampleMethod" : {
      "post" : {
        "summary" : "Operation in ExampleService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "param" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "exampleMethod",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "param",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ExampleService" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDepthFrame" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDepthFrame",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endDisplayFreezeScreen" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endDisplayFreezeScreen",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restLeftArm" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restLeftArm",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPath" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "padding" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "canOpenDoors" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "curr" : {
                    "type" : {
                      "type" : "Matrix4d"
                    }
                  },
                  "dest" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPath",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "curr",
          "schema" : {
            "type" : "Matrix4d"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "dest",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "padding",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "canOpenDoors",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocationBackupSet" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "documentName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocationBackupSet",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "documentName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createReferences" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "vars" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createReferences",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "vars",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionSignaturesForName" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actionName" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionSignaturesForName",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actionName",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkAt" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationTerm" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkAt",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "locationTerm",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=toggleShoppingCart" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "toggleShoppingCart",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeCurrentGoal" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeCurrentGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "agent",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endFreeze" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endFreeze",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveGripper" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "meters" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveGripper",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "meters",
          "schema" : {
            "type" : "float"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onBeliefNotificationUpdate" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindingsStrings" : {
                    "type" : {
                      "type" : "Map"
                    }
                  },
                  "queryTermString" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onBeliefNotificationUpdate",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "queryTermString",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "bindingsStrings",
          "schema" : {
            "type" : "Map"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableObstacleNotifications" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableObstacleNotifications",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onDictionaryEntriesUpdated" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "keys" : {
                    "type" : {
                      "type" : "Set"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onDictionaryEntriesUpdated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "keys",
          "schema" : {
            "type" : "Set"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=querySupportWithExplanation" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "querySupportWithExplanation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForMeasurement" : {
      "post" : {
        "summary" : "Operation in ScaleComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForMeasurement",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "value",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ScaleComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLex" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLex",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveToRelative" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "orientation" : {
                    "type" : {
                      "type" : "Quat4d"
                    }
                  },
                  "point" : {
                    "type" : {
                      "type" : "Point3d"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveToRelative",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "point",
          "schema" : {
            "type" : "Point3d"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "orientation",
          "schema" : {
            "type" : "Quat4d"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableKioskMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableKioskMode",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getStateMachine" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getStateMachine",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSimObservation" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSimObservation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelWaitForResponse" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelWaitForResponse",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "responseForm",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=releaseObject" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "refId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "position" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "releaseObject",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "groupName",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "refId",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "position",
          "schema" : {
            "type" : "float"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getHistory" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getHistory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertSemanticsToText" : {
      "post" : {
        "summary" : "Operation in NLGInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "u" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertSemanticsToText",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "u",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "NLGInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=ignoreTentativeAccept" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalPred" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "ignoreTentativeAccept",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goalPred",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=process" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindings" : {
                    "type" : {
                      "type" : "Map"
                    }
                  },
                  "constraint" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "process",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "constraint",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "bindings",
          "schema" : {
            "type" : "Map"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unitySendMessage" : {
      "post" : {
        "summary" : "Operation in UnityComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "msg" : {
                    "type" : {
                      "type" : "Message"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unitySendMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "msg",
          "schema" : {
            "type" : "Message"
          }
        } ],
        "tags" : [ "UnityComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=objectObserver" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "objectObserver",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setRV" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "rv" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setRV",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "rv",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=turnTo" : {
      "post" : {
        "summary" : "Operation in OrientationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tdest" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "turnTo",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tdest",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "OrientationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteVideoFromFirebase" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "videoName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteVideoFromFirebase",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "videoName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAllowAppointmentsSince" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAllowAppointmentsSince",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "time",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getContextFromId" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getContextFromId",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "id",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getToken" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tokenId" : {
                    "type" : {
                      "type" : "long"
                    }
                  },
                  "conf" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getToken",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tokenId",
          "schema" : {
            "type" : "long"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "conf",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addEntryToCache" : {
      "post" : {
        "summary" : "Operation in CachedParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "entry" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addEntryToCache",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "entry",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "CachedParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertProperties" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prob" : {
                    "type" : {
                      "type" : "Double"
                    }
                  },
                  "bindings" : {
                    "type" : {
                      "type" : "Map"
                    }
                  },
                  "properties" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertProperties",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "bindings",
          "schema" : {
            "type" : "Map"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "prob",
          "schema" : {
            "type" : "Double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "properties",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptCheckIn" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptCheckIn",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDiarcAgents" : {
      "post" : {
        "summary" : "Operation in Database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDiarcAgents",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Database" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAssertedProperties" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAssertedProperties",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "refId",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=loadEEPosesFromFile" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "loadEEPosesFromFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryCount" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryCount",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isBusy" : {
      "post" : {
        "summary" : "Operation in PlanningAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isBusy",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PlanningAgent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startAcknowledgeDisplay" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startAcknowledgeDisplay",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalStatus" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalStatus",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=notifyActiveGoalUpdated" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goal" : {
                    "type" : {
                      "type" : "Goal"
                    }
                  },
                  "status" : {
                    "type" : {
                      "type" : "GoalStatus"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "notifyActiveGoalUpdated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Goal"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "status",
          "schema" : {
            "type" : "GoalStatus"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToStartPose" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "safe" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToStartPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "safe",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getNearestElevatorDoors" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getNearestElevatorDoors",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToLocation" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "xdest" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "quat_z" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "quat_x" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "wait" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "ydest" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "quat_y" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "quat_w" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "xdest",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "ydest",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "quat_x",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "quat_y",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "quat_z",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "quat_w",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "wait",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLocationBackupSetNames" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLocationBackupSetNames",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActivatedEntities" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActivatedEntities",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getRules" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getRules",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=displayChargingAlert" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "displayChargingAlert",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveEEPosesToFile" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveEEPosesToFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endFreezeTemi" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endFreezeTemi",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=modifyAction" : {
      "post" : {
        "summary" : "Operation in ActionLearning",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "location" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "modification" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "modifyAction",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "action",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "modification",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ActionLearning" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getVoice" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getVoice",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEscortWaitDuration" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "waitDuration" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEscortWaitDuration",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "waitDuration",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorExitPosePath" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "padding" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorExitPosePath",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "elevatorDoor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "padding",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=recordPose" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "poseName" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "recordPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "poseName",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getControlState" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getControlState",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAppointmentLoadErrorMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAppointmentLoadErrorMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToLoc" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "escorting" : {
                    "type" : {
                      "type" : "Boolean"
                    }
                  },
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToLoc",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "escorting",
          "schema" : {
            "type" : "Boolean"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=beforeServiceWrapper" : {
      "post" : {
        "summary" : "Operation in TradeServiceTracker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "args" : {
                    "type" : {
                      "type" : "Object[]"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "beforeServiceWrapper",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "args",
          "schema" : {
            "type" : "Object[]"
          }
        } ],
        "tags" : [ "TradeServiceTracker" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goWest" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goWest",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopPR2Repair" : {
      "post" : {
        "summary" : "Operation in UnityPR2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "target" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopPR2Repair",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "target",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnityPR2" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pauseCapture" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pauseCapture",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addPrimitiveActions" : {
      "post" : {
        "summary" : "Operation in Database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "constraints" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addPrimitiveActions",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "constraints",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "Database" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeDamaged" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeDamaged",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tube",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableVoiceAck" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableVoiceAck",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=savePerformanceMeasures" : {
      "post" : {
        "summary" : "Operation in PerformanceMeasuresDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "agent" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "savePerformanceMeasures",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "agent",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PerformanceMeasuresDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryRecentFacts" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "n" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryRecentFacts",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "n",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endRepositionLoop" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endRepositionLoop",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=LLMListenSpaceStationFinetune" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "LLMListenSpaceStationFinetune",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorButtonPose" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "padding" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorButtonPose",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "elevatorDoor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "padding",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=closeVideo" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "closeVideo",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPromptText" : {
      "post" : {
        "summary" : "Operation in LLMNLComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPromptText",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "LLMNLComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=clearRecogntionHistory" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "clearRecogntionHistory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayText" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayText",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findPath" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "goalY" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "startY" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "goalX" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "startX" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findPath",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "startX",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "startY",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goalX",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goalY",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "path",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=reportNovelties" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "novelties" : {
                    "type" : {
                      "type" : "Set"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "reportNovelties",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "novelties",
          "schema" : {
            "type" : "Set"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSimStateMachine" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSimStateMachine",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSuccessFromRef" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSuccessFromRef",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "refId",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setVoice" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "v" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setVoice",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "v",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=lastCart" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "lastCart",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pointTo" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : {
                      "type" : "float"
                    }
                  },
                  "y" : {
                    "type" : {
                      "type" : "float"
                    }
                  },
                  "z" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pointTo",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "x",
          "schema" : {
            "type" : "float"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "y",
          "schema" : {
            "type" : "float"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "z",
          "schema" : {
            "type" : "float"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=aisleObserver" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "aisleObserver",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unityGetResponse" : {
      "post" : {
        "summary" : "Operation in UnityComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "msg" : {
                    "type" : {
                      "type" : "Message"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unityGetResponse",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "msg",
          "schema" : {
            "type" : "Message"
          }
        } ],
        "tags" : [ "UnityComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=actionExists" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goal" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "actionExists",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocationBackup" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocationBackup",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "collectionName",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBatteryAbortLevel" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "abortLevel" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBatteryAbortLevel",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "abortLevel",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findMatchingEntries" : {
      "post" : {
        "summary" : "Operation in Utilities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "entries" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "inputRoleTypes" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findMatchingEntries",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "entries",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "inputRoleTypes",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "Utilities" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertToType" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "type" : {
                    "type" : {
                      "type" : "Class"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertToType",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "refId",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "Class"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentPlan" : {
      "post" : {
        "summary" : "Operation in Planner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentPlan",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Planner" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=removeDescriptor" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "long"
                    }
                  },
                  "descriptor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "removeDescriptor",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "long"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "descriptor",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=approachLocation" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "approachLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateResolverPropertiesHandled" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateResolverPropertiesHandled",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayToFile" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "text" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayToFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "text",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkObstacle" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkObstacle",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAppointmentLoadErrorMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAppointmentLoadErrorMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=joinOnGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "joinOnGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertBeliefs" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "beliefs" : {
                    "type" : {
                      "type" : "Set"
                    }
                  },
                  "memoryLevel" : {
                    "type" : {
                      "type" : "MemoryLevel"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertBeliefs",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "beliefs",
          "schema" : {
            "type" : "Set"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "memoryLevel",
          "schema" : {
            "type" : "MemoryLevel"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDisplayAppointmentsSince" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDisplayAppointmentsSince",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateHomeBase" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "overwriteMap" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateHomeBase",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "overwriteMap",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pointHeadTo" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : {
                      "type" : "float"
                    }
                  },
                  "y" : {
                    "type" : {
                      "type" : "float"
                    }
                  },
                  "z" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pointHeadTo",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "x",
          "schema" : {
            "type" : "float"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "y",
          "schema" : {
            "type" : "float"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "z",
          "schema" : {
            "type" : "float"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLearningStatus" : {
      "post" : {
        "summary" : "Operation in ActionLearning",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLearningStatus",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ActionLearning" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokenIds" : {
      "post" : {
        "summary" : "Operation in VisionConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "objectRef" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokenIds",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "objectRef",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "VisionConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setHardButtons" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "disabled" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setHardButtons",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "disabled",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=loadPosesFromFile" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "loadPosesFromFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesDamaged" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "area" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesDamaged",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "area",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeHealth" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeHealth",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tube",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryBelief" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queries" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryBelief",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "queries",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setGameOver" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalAchieved" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setGameOver",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goalAchieved",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isMoving" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isMoving",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=clear" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "clear",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=relocalize" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "sayText" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "relocalize",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "sayText",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=playFile" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "fileName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "playFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "fileName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDefaultVels" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDefaultVels",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeFluent" : {
      "post" : {
        "summary" : "Operation in OperatorCheck",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeFluent",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "OperatorCheck" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveTrajectoriesToFile" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveTrajectoriesToFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=removeEntry" : {
      "post" : {
        "summary" : "Operation in Dictionary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "grammar" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "meaning" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "cognitiveStatus" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "removeEntry",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "grammar",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "meaning",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "cognitiveStatus",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "Dictionary" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=use" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "use",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disablePrivacyMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disablePrivacyMode",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getBirthdayMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getBirthdayMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=writeSenseAllJsonToFile" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filePreFix" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "writeSenseAllJsonToFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filePreFix",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActiveGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActiveGoals",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForResponse" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForResponse",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "responseForm",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopAndRemoveType" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopAndRemoveType",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableSim" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableSim",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAction" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAction",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableKidsMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableKidsMode",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getUnsatisfiableConstraints" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getUnsatisfiableConstraints",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "descriptor",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resetMap" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resetMap",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPos" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalCoords" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "clearScreen" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "destination" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPos",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goalCoords",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "destination",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "clearScreen",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerForNotification" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queryTerm" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerForNotification",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "queryTerm",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryLastSource" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryLastSource",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=ledOff" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "ledOff",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeCapture" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeCapture",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLowLevelPlan" : {
      "post" : {
        "summary" : "Operation in SimulationBasedPlanning",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalContext" : {
                    "type" : {
                      "type" : "GoalContext"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLowLevelPlan",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goalContext",
          "schema" : {
            "type" : "GoalContext"
          }
        } ],
        "tags" : [ "SimulationBasedPlanning" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setControlState" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "ControlState"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setControlState",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "ControlState"
          }
        } ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getFirebaseVideoNames" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getFirebaseVideoNames",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=receivedNoveltySignal" : {
      "post" : {
        "summary" : "Operation in NovelRunComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "receivedNoveltySignal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NovelRunComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeNextTo" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeNextTo",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=writeLocationToFirebase" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationData" : {
                    "type" : {
                      "type" : "HashMap"
                    }
                  },
                  "locationName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "writeLocationToFirebase",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "locationName",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "locationData",
          "schema" : {
            "type" : "HashMap"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBreathEnabled" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "par" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "enable" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBreathEnabled",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "par",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "enable",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addDescriptor" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "long"
                    }
                  },
                  "descriptor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addDescriptor",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "long"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "descriptor",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkLocationName" : {
      "post" : {
        "summary" : "Operation in Dictionary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkLocationName",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "Dictionary" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGroupName" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGroupName",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllAgentTeams" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllAgentTeams",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onActiveGoalUpdated" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalString" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  },
                  "status" : {
                    "type" : {
                      "type" : "GoalStatus"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onActiveGoalUpdated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goalString",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "status",
          "schema" : {
            "type" : "GoalStatus"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEscortWaitAttempts" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEscortWaitAttempts",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endDescriptorChanges" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endDescriptorChanges",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateMap" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindings" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "atTerm" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateMap",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "atTerm",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "bindings",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=generateRE" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "generateRE",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "ref",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addNewWord" : {
      "post" : {
        "summary" : "Operation in MaryTTSComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "word" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "pcmData" : {
                    "type" : {
                      "type" : "byte[]"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addNewWord",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "word",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "pcmData",
          "schema" : {
            "type" : "byte[]"
          }
        } ],
        "tags" : [ "MaryTTSComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=generateLocationRules" : {
      "post" : {
        "summary" : "Operation in Dictionary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "semanticType" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "delete" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "base" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "generateLocationRules",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "base",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "semanticType",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "delete",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "Dictionary" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelGoalInQueueIndex" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "index" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelGoalInQueueIndex",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "index",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=craft" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "recipe" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "craft",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "recipe",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryFactsInTimeframe" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "start" : {
                    "type" : {
                      "type" : "Long"
                    }
                  },
                  "end" : {
                    "type" : {
                      "type" : "Long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryFactsInTimeframe",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "start",
          "schema" : {
            "type" : "Long"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "end",
          "schema" : {
            "type" : "Long"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isEmpty" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "y" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isEmpty",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "x",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "y",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeDiscrepancies" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeDiscrepancies",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resolveReferences" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : {
                      "type" : "Utterance"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resolveReferences",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "utterance",
          "schema" : {
            "type" : "Utterance"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sendPositionUpdate" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sendPositionUpdate",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=notifyPendingGoalUpdated" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "added" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "g" : {
                    "type" : {
                      "type" : "Goal"
                    }
                  },
                  "index" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "notifyPendingGoalUpdated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "g",
          "schema" : {
            "type" : "Goal"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "index",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "added",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPosture" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "targetPosture" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPosture",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "targetPosture",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=putAction" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "entry" : {
                    "type" : {
                      "type" : "ActionDBEntry"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "putAction",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "entry",
          "schema" : {
            "type" : "ActionDBEntry"
          }
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restoreLocations" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restoreLocations",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "collectionName",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getMyGroups" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getMyGroups",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateFOC" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "r" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateFOC",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "r",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=followMe" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "followMe",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeProperties" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeProperties",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=fillAction" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "a" : {
                    "type" : {
                      "type" : "ActionDBEntry"
                    }
                  },
                  "arg" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "bytwo" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "fillAction",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "a",
          "schema" : {
            "type" : "ActionDBEntry"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "arg",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "bytwo",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getRV" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getRV",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSayTextBlocks" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSayTextBlocks",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "value",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEarlyAppointmentMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEarlyAppointmentMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=confirmToken" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : {
                      "type" : "MemoryObject"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "confirmToken",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "token",
          "schema" : {
            "type" : "MemoryObject"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stop" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stop",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPropertiesHandled" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPropertiesHandled",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedPreConditionsPolicy" : {
      "post" : {
        "summary" : "Operation in FailedPreConditionsPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "goal" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "brokenActionSignature" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "failureReasons" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedPreConditionsPolicy",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "brokenActionSignature",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "failureReasons",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "FailedPreConditionsPolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resetGame" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resetGame",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPR2Area" : {
      "post" : {
        "summary" : "Operation in UnityPR2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPR2Area",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnityPR2" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=collect" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "collect",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=giveUp" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "giveUp",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=loadTrajectoriesFromFile" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "loadTrajectoriesFromFile",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "filename",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onPendingGoalsUpdated" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gids" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "goalStrings" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "statuses" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onPendingGoalsUpdated",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goalStrings",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "statuses",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "gids",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokens" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : {
                      "type" : "long"
                    }
                  },
                  "conf" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokens",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "typeId",
          "schema" : {
            "type" : "long"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "conf",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeRL" : {
      "post" : {
        "summary" : "Operation in PolycraftRLComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "lastAction" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "failedAction" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "actionResult" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeRL",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "failedAction",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "lastAction",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "actionResult",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "PolycraftRLComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=rest" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "rest",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=suspendCurrentGoal" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "suspendCurrentGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getFrame" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getFrame",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptGoToLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptGoToLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionStatus" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionStatus",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentDomain" : {
      "post" : {
        "summary" : "Operation in Planner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentDomain",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Planner" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=markDoor" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "closed" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "portal" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "markDoor",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "portal",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "closed",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeOff" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeOff",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "tube",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableVoiceAck" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableVoiceAck",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertBelief" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "belief" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertBelief",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "belief",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopMoving" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopMoving",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interactWithObject" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interactWithObject",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addHomophone" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "homophone" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "base" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addHomophone",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "base",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "homophone",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSuccessfulCheckInMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSuccessfulCheckInMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractBeliefs" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "beliefs" : {
                    "type" : {
                      "type" : "Set"
                    }
                  },
                  "memoryLevel" : {
                    "type" : {
                      "type" : "MemoryLevel"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractBeliefs",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "beliefs",
          "schema" : {
            "type" : "Set"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "memoryLevel",
          "schema" : {
            "type" : "MemoryLevel"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=showTopBar" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "showTopBar",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAgentType" : {
      "post" : {
        "summary" : "Operation in AgentModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAgentType",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "AgentModel" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTV" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTV",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveToBlocking" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : {
                      "type" : "float"
                    }
                  },
                  "y" : {
                    "type" : {
                      "type" : "float"
                    }
                  },
                  "theta" : {
                    "type" : {
                      "type" : "float"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveToBlocking",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "x",
          "schema" : {
            "type" : "float"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "y",
          "schema" : {
            "type" : "float"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "theta",
          "schema" : {
            "type" : "float"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAppointmentListEmptyMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAppointmentListEmptyMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enablePrivacyMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enablePrivacyMode",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getBirthdayMessageRange" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getBirthdayMessageRange",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkFloorSupport" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkFloorSupport",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveDist" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dist" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveDist",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "dist",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationHealth" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationHealth",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedPostConditionsPolicy" : {
      "post" : {
        "summary" : "Operation in FailedPostConditionsPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "goal" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "brokenActionSignature" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "failureReasons" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedPostConditionsPolicy",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "brokenActionSignature",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "failureReasons",
          "schema" : {
            "type" : "List"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "FailedPostConditionsPolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMService" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "serviceStr" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMService",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "serviceStr",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=delete" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "itemSymbol" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "delete",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "itemSymbol",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkIgnoreTentativeAccept" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalPred" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkIgnoreTentativeAccept",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goalPred",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setDisplayAppointmentsUntil" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setDisplayAppointmentsUntil",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "time",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resolveReferenceLLM" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resolveReferenceLLM",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endQRCodeDisplay" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endQRCodeDisplay",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restartAllStoppedSearches" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restartAllStoppedSearches",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=filterPointsNotInCurrentRoom" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locations" : {
                    "type" : {
                      "type" : "Set"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "filterPointsNotInCurrentRoom",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "locations",
          "schema" : {
            "type" : "Set"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=senseHint" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "senseHint",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getKBName" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getKBName",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isQuestionResponse" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "speaker" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "listener" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "semantics" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isQuestionResponse",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "speaker",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "listener",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "semantics",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDisplayAppointmentsUntil" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDisplayAppointmentsUntil",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "priorityTier" : {
                    "type" : {
                      "type" : "PriorityTier"
                    }
                  },
                  "g" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  },
                  "type" : {
                    "type" : {
                      "type" : "ExecutionType"
                    }
                  },
                  "priority" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "g",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "ExecutionType"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "priority",
          "schema" : {
            "type" : "long"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "priorityTier",
          "schema" : {
            "type" : "PriorityTier"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryAtTime" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "time" : {
                    "type" : {
                      "type" : "Long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryAtTime",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "time",
          "schema" : {
            "type" : "Long"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLastBrokenAction" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLastBrokenAction",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterNotification" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterNotification",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unlearn" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindings" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "learningTerm" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unlearn",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "learningTerm",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "bindings",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=negotiateConstraints" : {
      "post" : {
        "summary" : "Operation in NormComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "options" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "negotiateConstraints",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "options",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "NormComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrFloor" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrFloor",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllActions" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllActions",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEscortWaitAttempts" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "waitAttempts" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEscortWaitAttempts",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "waitAttempts",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentGoal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actorToCheck" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "index" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actorToCheck",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "index",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableObstacleNotifications" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableObstacleNotifications",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTypeId" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTypeId",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "descriptor",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAvailableTypeIds" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAvailableTypeIds",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTypeIds" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "conf" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTypeIds",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "conf",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onNewActionsCallback" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actions" : {
                    "type" : {
                      "type" : "List"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onNewActionsCallback",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actions",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLateAppointmentMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLateAppointmentMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=answerQuestion" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "speaker" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "listener" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "answerSemantics" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "answerQuestion",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "speaker",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "listener",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "answerSemantics",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getProperties" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getProperties",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "ref",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=turnDist" : {
      "post" : {
        "summary" : "Operation in OrientationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dist" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "turnDist",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "dist",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "OrientationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllowAppointmentsSince" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllowAppointmentsSince",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setPoseGlobal" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "y" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "theta" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setPoseGlobal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "x",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "y",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "theta",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopUtterance" : {
      "post" : {
        "summary" : "Operation in SpeechProductionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopUtterance",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SpeechProductionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=suspendWaitForResponse" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "suspendWaitForResponse",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "responseForm",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayTextDialogueHistory" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayTextDialogueHistory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setDisplayAppointmentsSince" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setDisplayAppointmentsSince",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "time",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=navigationObserver" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : {
                      "type" : "Term"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "navigationObserver",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "Term"
          }
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDialogueHistory" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDialogueHistory",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSuccessfulCheckInMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSuccessfulCheckInMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "message",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalFailConditions" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : {
                      "type" : "long"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalFailConditions",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "gid",
          "schema" : {
            "type" : "long"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptSaveLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptSaveLocation",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalIds" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goal" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalIds",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "goal",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAngle" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAngle",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addNotifications" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callbackTerm" : {
                    "type" : {
                      "type" : "List"
                    }
                  },
                  "queryTerm" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addNotifications",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "queryTerm",
          "schema" : {
            "type" : "Predicate"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "callbackTerm",
          "schema" : {
            "type" : "List"
          }
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTrialTime" : {
      "post" : {
        "summary" : "Operation in NovelRunComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTrialTime",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NovelRunComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTransform" : {
      "post" : {
        "summary" : "Operation in CoordinateFramesInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "srcFrame" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "dstFrame" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTransform",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "srcFrame",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "dstFrame",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "CoordinateFramesInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeWaitForResponse" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : {
                      "type" : "Predicate"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeWaitForResponse",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "responseForm",
          "schema" : {
            "type" : "Predicate"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restartApp" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restartApp",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAppointmentListEmptyMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAppointmentListEmptyMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSimStateMachine" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "sm" : {
                    "type" : {
                      "type" : "StateMachine"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSimStateMachine",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "sm",
          "schema" : {
            "type" : "StateMachine"
          }
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=itemWeightGreaterThan" : {
      "post" : {
        "summary" : "Operation in ScaleComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "itemWeightGreaterThan",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "value",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "ScaleComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=smoothTurn" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "turnAngle" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "smoothTurn",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "turnAngle",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=selectItem" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "item" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "selectItem",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "item",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractBelief" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "belief" : {
                    "type" : {
                      "type" : "Term"
                    }
                  },
                  "memoryLevel" : {
                    "type" : {
                      "type" : "MemoryLevel"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractBelief",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "belief",
          "schema" : {
            "type" : "Term"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "memoryLevel",
          "schema" : {
            "type" : "MemoryLevel"
          }
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToNearestElevator" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToNearestElevator",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createNewType" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createNewType",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllDiarcAgentsForActor" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  },
                  "groupFormat" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllDiarcAgentsForActor",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "groupFormat",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentGoals",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "actor",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentContextCount" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentContextCount",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=activatePattern" : {
      "post" : {
        "summary" : "Operation in PatternMatchingParser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "patternName" : {
                    "type" : {
                      "type" : "String"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "activatePattern",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "patternName",
          "schema" : {
            "type" : "String"
          }
        } ],
        "tags" : [ "PatternMatchingParser" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllowAppointmentsUntil" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllowAppointmentsUntil",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createWeightGoal" : {
      "post" : {
        "summary" : "Operation in Forklift",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createWeightGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "location",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "Forklift" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=senseRecipe" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "senseRecipe",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerForNewPropertyNotification" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerForNewPropertyNotification",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterForDialogueHistoryNotifications" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : {
                      "type" : "TRADEServiceInfo"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterForDialogueHistoryNotifications",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "callback",
          "schema" : {
            "type" : "TRADEServiceInfo"
          }
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelCurrentGoal" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelCurrentGoal",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "agent",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelInteraction" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelInteraction",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPostureList" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPostureList",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEarlyAppointmentMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEarlyAppointmentMessage",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableSim" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableSim",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findDirectPath" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalY" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "startY" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "goalX" : {
                    "type" : {
                      "type" : "int"
                    }
                  },
                  "startX" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findDirectPath",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "startX",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "startY",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goalX",
          "schema" : {
            "type" : "int"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "goalY",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=completion" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : {
                      "type" : "String"
                    }
                  },
                  "prompt" : {
                    "type" : {
                      "type" : "Prompt"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "completion",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "model",
          "schema" : {
            "type" : "String"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "prompt",
          "schema" : {
            "type" : "Prompt"
          }
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=backupLocations" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : {
                      "type" : "Symbol"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "backupLocations",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "collectionName",
          "schema" : {
            "type" : "Symbol"
          }
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveTo" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "xdest" : {
                    "type" : {
                      "type" : "double"
                    }
                  },
                  "ydest" : {
                    "type" : {
                      "type" : "double"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveTo",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "xdest",
          "schema" : {
            "type" : "double"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "ydest",
          "schema" : {
            "type" : "double"
          }
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=writeASLToFirebase" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "init" : {
                    "type" : {
                      "type" : "boolean"
                    }
                  },
                  "e" : {
                    "type" : {
                      "type" : "ActionDBEntry"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "writeASLToFirebase",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "e",
          "schema" : {
            "type" : "ActionDBEntry"
          }
        }, {
          "required" : false,
          "in" : "query",
          "name" : "init",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isSpeaking" : {
      "post" : {
        "summary" : "Operation in SpeechProductionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isSpeaking",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SpeechProductionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=externalUpdateReferenceNumber" : {
      "post" : {
        "summary" : "Operation in PoseConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "externalCurrentRefNumber" : {
                    "type" : {
                      "type" : "int"
                    }
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "externalUpdateReferenceNumber",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "parameters" : [ {
          "required" : false,
          "in" : "query",
          "name" : "externalCurrentRefNumber",
          "schema" : {
            "type" : "int"
          }
        } ],
        "tags" : [ "PoseConsultant" ],
        "consumes" : [ "application/json" ]
      }
    }
  },
  "info" : {
    "title" : "TRADE Service API",
    "version" : "1.0.0",
    "description" : "Generated API Documentation"
  }
}