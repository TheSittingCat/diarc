{
  "openapi" : "3.0.0",
  "paths" : {
    "/invoke-service?serviceName=onNewActionsCallback_list" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actions" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onNewActionsCallback_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "actions",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getMatchingResult_cognexreference_list" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "toReBind" : {
                    "type" : "cognexreference"
                  },
                  "results" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getMatchingResult_cognexreference_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "cognexreference"
          },
          "name" : "toReBind",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "results",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getContextFromId_long" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getContextFromId_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "id",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLearningStatus_symbol" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLearningStatus_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelAllPendingGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelAllPendingGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=closeGripperRapid" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "closeGripperRapid",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=senseNewMap" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "senseNewMap",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getNotificationProver" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getNotificationProver",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startGame" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startGame",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=positReference_list" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "positReference_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "properties",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=approachLocation_symbol" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "approachLocation_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=calibrateGripper" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "calibrateGripper",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=navigationObserver_term" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "navigationObserver_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getMapHandler" : {
      "post" : {
        "summary" : "Operation in MapEndpointComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getMapHandler",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapEndpointComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPoseGlobalQuat" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPoseGlobalQuat",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelSystemGoals_symbol" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelSystemGoals_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setConfig_string" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setConfig_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "path",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=uploadMap_bytearrayoutputstream_float_float_float_float_float" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "originX" : {
                    "type" : "number"
                  },
                  "originY" : {
                    "type" : "number"
                  },
                  "width" : {
                    "type" : "number"
                  },
                  "map" : {
                    "type" : "bytearrayoutputstream"
                  },
                  "resolution" : {
                    "type" : "number"
                  },
                  "height" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "uploadMap_bytearrayoutputstream_float_float_float_float_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "bytearrayoutputstream"
          },
          "name" : "map",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "width",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "height",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "originX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "originY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "resolution",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelMotion_long" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "aid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelMotion_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "aid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesBroken" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesBroken",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayText_string" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayText_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractBelief_term" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "belief" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractBelief_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "belief",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEscortWaitDuration_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "waitDuration" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEscortWaitDuration_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "waitDuration",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeOff_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeOff_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "tube",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addDescriptor_long_symbol" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  },
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addDescriptor_long_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addNotifications_predicate_list" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callbackTerm" : {
                    "type" : "list"
                  },
                  "queryTerm" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addNotifications_predicate_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "queryTerm",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "callbackTerm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=markDoor_symbol_boolean" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "closed" : {
                    "type" : "boolean"
                  },
                  "portal" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "markDoor_symbol_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "portal",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "closed",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=breakBlock" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "breakBlock",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setVoice_string" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "v" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setVoice_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "v",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getRepositionFailure" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getRepositionFailure",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionsByEffect_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "effect" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionsByEffect_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "effect",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startQRCodeDisplay_string_string" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "header" : {
                    "type" : "string"
                  },
                  "url" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startQRCodeDisplay_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "url",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "header",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateGoals" : {
      "post" : {
        "summary" : "Operation in GoalViewerEndpointComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalViewerEndpointComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=takeSnapshot_string" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "takeSnapshot_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setGraspPoint_symbol_string" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "itemType" : {
                    "type" : "name:type"
                  },
                  "targetString" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setGraspPoint_symbol_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "itemType",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "targetString",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkError_term" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "t" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkError_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "t",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesOff_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "area" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesOff_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "area",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addPrimitiveActions_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in Database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "constraints" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addPrimitiveActions_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "constraints",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Database" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cacheParse_utterance" : {
      "post" : {
        "summary" : "Operation in HybridParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cacheParse_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "utterance",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "HybridParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=displayFace" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "displayFace",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=completion_symbol_prompt" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : "name:type"
                  },
                  "prompt" : {
                    "type" : "prompt"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "completion_symbol_prompt",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "model",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "prompt"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=freezeTemi" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "freezeTemi",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=ignoreTentativeAccept_predicate" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalPred" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "ignoreTentativeAccept_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goalPred",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeProperties_symbol_term" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeProperties_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryLastTime_term" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryLastTime_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertBelief_term_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "belief" : {
                    "type" : "term"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertBelief_term_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "belief",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAction_string_list" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "roles" : {
                    "type" : "list"
                  },
                  "type" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAction_string_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "roles",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentPosition" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentPosition",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=undock" : {
      "post" : {
        "summary" : "Operation in DockingInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "undock",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "DockingInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endAcknowledgeDisplay" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endAcknowledgeDisplay",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=followMeBlocking" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "followMeBlocking",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=process_term_map" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindings" : {
                    "type" : "map"
                  },
                  "constraint" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "process_term_map",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "constraint",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "map"
          },
          "name" : "bindings",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getText_long" : {
      "post" : {
        "summary" : "Operation in SimSpeechProductionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ts" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getText_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "ts",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SimSpeechProductionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=negotiateConstraints_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in NormComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "options" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "negotiateConstraints_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "options",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NormComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopAllSearches" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopAllSearches",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForUtterance" : {
      "post" : {
        "summary" : "Operation in ListenerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForUtterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ListenerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onPendingGoalsUpdated_list_list_list_list_list" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agentStrings" : {
                    "type" : "list"
                  },
                  "gids" : {
                    "type" : "list"
                  },
                  "goalStrings" : {
                    "type" : "list"
                  },
                  "goalStatuses" : {
                    "type" : "list"
                  },
                  "goalPriorityTiers" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onPendingGoalsUpdated_list_list_list_list_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "agentStrings",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "goalStrings",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "gids",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "goalStatuses",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "goalPriorityTiers",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setStiffness_string_float" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "stiffness" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setStiffness_string_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "stiffness",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesOff" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesOff",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=activatePattern_string" : {
      "post" : {
        "summary" : "Operation in PatternMatchingParser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "patternName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "activatePattern_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "patternName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PatternMatchingParser" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayText_symbol_string" : {
      "post" : {
        "summary" : "Operation in UnityComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "text" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayText_symbol_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "text",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnityComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionsBySignature_predicate" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actionSignature" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionsBySignature_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "actionSignature",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pourSauce" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pourSauce",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBreathEnabled_string_boolean" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "par" : {
                    "type" : "string"
                  },
                  "enable" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBreathEnabled_string_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "par",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "enable",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPriorityForGoal_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPriorityForGoal_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getVels" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getVels",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setRV_double" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "rv" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setRV_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "rv",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getBeliefHandler" : {
      "post" : {
        "summary" : "Operation in BeliefEndpointComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getBeliefHandler",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefEndpointComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getImageSize" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getImageSize",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goEast" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goEast",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractBeliefs_set_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "beliefs" : {
                    "type" : "set"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractBeliefs_set_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "set"
          },
          "name" : "beliefs",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableButtons" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableButtons",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBusy_boolean" : {
      "post" : {
        "summary" : "Operation in PlanningAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "busy" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBusy_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "busy",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PlanningAgent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getHistory_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getHistory_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=savePosesToFile_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "savePosesToFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPosture" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPosture",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=suspendSystemGoals" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "suspendSystemGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokenIds_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokenIds_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addItem_symbol" : {
      "post" : {
        "summary" : "Operation in ItemConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addItem_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ItemConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLocationNameFromReference_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locRef" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLocationNameFromReference_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "locRef",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAppointmentListEmptyMessage_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAppointmentListEmptyMessage_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocationFromFirebase_string" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocationFromFirebase_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "locationName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=playVideo_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "playVideo_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActiveGoals_symbol" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActiveGoals_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=applyPragmaticMeaning_utterance" : {
      "post" : {
        "summary" : "Operation in PragmaticsInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "applyPragmaticMeaning_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "utterance",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PragmaticsInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForResponse_predicate_long" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "waitDuration" : {
                    "type" : "integer"
                  },
                  "responseForm" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForResponse_predicate_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "responseForm",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "long"
          },
          "name" : "waitDuration",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLastObservation" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLastObservation",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=smoothTurn_symbol" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "turnAngle" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "smoothTurn_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "turnAngle",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveEEPosesToFile_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveEEPosesToFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getOnDeckText" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getOnDeckText",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=freeze" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "freeze",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initializeRL_string" : {
      "post" : {
        "summary" : "Operation in PolycraftRLComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "failedAction" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initializeRL_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "failedAction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftRLComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterForNotification_term_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queryTerm" : {
                    "type" : "term"
                  },
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterForNotification_term_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "queryTerm",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeState_term" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeState_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=savePerformanceMeasures_string_string" : {
      "post" : {
        "summary" : "Operation in PerformanceMeasuresDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  },
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "savePerformanceMeasures_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "path",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PerformanceMeasuresDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=joinOnGoal_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "joinOnGoal_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoal_predicate_executiontype_symbol" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "priorityTier" : {
                    "type" : "name:type"
                  },
                  "g" : {
                    "type" : "predicate"
                  },
                  "type" : {
                    "type" : "executiontype"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoal_predicate_executiontype_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "executiontype"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "priorityTier",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGripperPosition_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGripperPosition_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=playFile_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "fileName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "playFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "fileName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=confirmToken_long" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tokenId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "confirmToken_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "tokenId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToCameraPose_symbol" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationRef" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToCameraPose_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "locationRef",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unlearn_term_list" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindings" : {
                    "type" : "list"
                  },
                  "learningTerm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unlearn_term_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "learningTerm",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "bindings",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPendingGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPendingGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveLocation_symbol" : {
      "post" : {
        "summary" : "Operation in ABBLocationConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveLocation_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ABBLocationConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setCheckInHeaderMessage_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setCheckInHeaderMessage_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getConfigFile" : {
      "post" : {
        "summary" : "Operation in MaryTTSComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getConfigFile",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MaryTTSComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableButtons" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableButtons",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractBeliefs_set" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "beliefs" : {
                    "type" : "set"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractBeliefs_set",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "set"
          },
          "name" : "beliefs",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDisparityFrame" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDisparityFrame",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelAllCurrentGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelAllCurrentGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalId_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goal" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalId_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveToBlocking_float_float_float" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "number"
                  },
                  "y" : {
                    "type" : "number"
                  },
                  "theta" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveToBlocking_float_float_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "float"
          },
          "name" : "x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "y",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "theta",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getInitialDomain_list" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getInitialDomain_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopType_long" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopType_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocation_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocation_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=newConsultantCallback_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tsi" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "newConsultantCallback_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "tsi",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isDiarcAgent_symbol" : {
      "post" : {
        "summary" : "Operation in Database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agentRef" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isDiarcAgent_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agentRef",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Database" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setState_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "predicate" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setState_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "predicate",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForDetection" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForDetection",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion_string_string" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : "string"
                  },
                  "prompt" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "model",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCheckInHeaderMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCheckInHeaderMessage",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resolveReferenceLLM_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resolveReferenceLLM_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=graspObject_string_symbol_float" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "refId" : {
                    "type" : "name:type"
                  },
                  "position" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "graspObject_string_symbol_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "position",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=placeItem_symbol" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "itemSymbol" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "placeItem_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "itemSymbol",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=displayFreezeScreen" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "displayFreezeScreen",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveTo_double_double" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "xdest" : {
                    "type" : "number"
                  },
                  "ydest" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveTo_double_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "xdest",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "ydest",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTypeId_list" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptors" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTypeId_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "descriptors",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getVisionAssertions" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getVisionAssertions",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSuccessfulCheckInMessage_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSuccessfulCheckInMessage_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActor" : {
      "post" : {
        "summary" : "Operation in AgentModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActor",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "AgentModel" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateFOC_symbol" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "r" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateFOC_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "r",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=skipsQueue_string" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "funcName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "skipsQueue_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "funcName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokenIds_symbol" : {
      "post" : {
        "summary" : "Operation in VisionConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "objectRef" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokenIds_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "objectRef",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalStatus_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalStatus_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addEntryToCache_utterance" : {
      "post" : {
        "summary" : "Operation in CachedParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "entry" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addEntryToCache_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "entry",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CachedParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=welcome" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "welcome",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateRobotPose" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateRobotPose",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkInKiosk_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkInKiosk_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActivatedEntities_list" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupConstraints" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActivatedEntities_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "groupConstraints",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertSemanticsToText_utterance" : {
      "post" : {
        "summary" : "Operation in NLGInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "u" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertSemanticsToText_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "u",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NLGInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=clearScreen" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "clearScreen",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=loadEEPosesFromFile_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "loadEEPosesFromFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=clear_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "clear_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptWaitingForUtterance" : {
      "post" : {
        "summary" : "Operation in ListenerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptWaitingForUtterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ListenerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEscortWaitDuration" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEscortWaitDuration",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertProperties_map_double_list" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prob" : {
                    "type" : "number"
                  },
                  "bindings" : {
                    "type" : "map"
                  },
                  "properties" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertProperties_map_double_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "map"
          },
          "name" : "bindings",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "prob",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "properties",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addArea_symbol" : {
      "post" : {
        "summary" : "Operation in ABBAreaConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addArea_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ABBAreaConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTypeIds_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTypeIds_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=requestPermissions" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "requestPermissions",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableKioskMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableKioskMode",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=nop" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "nop",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedPreConditionsPolicy_symbol_predicate_list_predicate" : {
      "post" : {
        "summary" : "Operation in FailedPreConditionsPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "goal" : {
                    "type" : "predicate"
                  },
                  "brokenActionSignature" : {
                    "type" : "predicate"
                  },
                  "failureReasons" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedPreConditionsPolicy_symbol_predicate_list_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "brokenActionSignature",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "failureReasons",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FailedPreConditionsPolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionSignaturesForName_symbol" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actionName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionSignaturesForName_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actionName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLocationBackupCollections" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLocationBackupCollections",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokenIds_list_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptors" : {
                    "type" : "list"
                  },
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokenIds_list_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "descriptors",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesDamaged_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "area" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesDamaged_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "area",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startRecordingTrajectory_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "trajectoryName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startRecordingTrajectory_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "trajectoryName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEEPose_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEEPose_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPastGoal_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPastGoal_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=removeEntry_string_string_string_string" : {
      "post" : {
        "summary" : "Operation in Dictionary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "grammar" : {
                    "type" : "string"
                  },
                  "meaning" : {
                    "type" : "string"
                  },
                  "cognitiveStatus" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "removeEntry_string_string_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "grammar",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "meaning",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "cognitiveStatus",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Dictionary" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoal_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoal_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onActiveGoalsUpdated_list_list_list_list_list" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agentStrings" : {
                    "type" : "list"
                  },
                  "gids" : {
                    "type" : "list"
                  },
                  "goalStrings" : {
                    "type" : "list"
                  },
                  "goalStatuses" : {
                    "type" : "list"
                  },
                  "goalPriorityTiers" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onActiveGoalsUpdated_list_list_list_list_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "agentStrings",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "goalStrings",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "gids",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "goalStatuses",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "goalPriorityTiers",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=freeze_symbol" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "freeze_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMModel_string" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "modelStr" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMModel_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "modelStr",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isCurrentlyExploring" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isCurrentlyExploring",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setVolume_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "volume" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setVolume_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "volume",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initAreas" : {
      "post" : {
        "summary" : "Operation in ForkliftPython",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initAreas",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ForkliftPython" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopRecordingTrajectory" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopRecordingTrajectory",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=loadTrajectoriesFromFile_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "loadTrajectoriesFromFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAvailableActions" : {
      "post" : {
        "summary" : "Operation in AgentModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAvailableActions",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "AgentModel" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=playGame" : {
      "post" : {
        "summary" : "Operation in NovelRunComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "playGame",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NovelRunComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restoreLocations_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restoreLocations_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "collectionName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateHomeBase_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "overwriteMap" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateHomeBase_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "overwriteMap",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalIds_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goal" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalIds_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorEnterPosePath_symbol_double" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : "name:type"
                  },
                  "padding" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorEnterPosePath_symbol_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "elevatorDoor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "padding",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getFacts" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getFacts",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setDisplayAppointmentsUntil_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setDisplayAppointmentsUntil_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setKioskTimeout_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "timeout" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setKioskTimeout_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "timeout",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isLocalized" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isLocalized",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalViewerHandler" : {
      "post" : {
        "summary" : "Operation in GoalViewerEndpointComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalViewerHandler",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalViewerEndpointComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getKnownLocationNames" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getKnownLocationNames",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertSemanticsToText_utterance_boolean" : {
      "post" : {
        "summary" : "Operation in PickAndPlaceLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "u" : {
                    "type" : "utterance"
                  },
                  "hasWords" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertSemanticsToText_utterance_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "u",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "hasWords",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PickAndPlaceLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=acceptUtterance" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "acceptUtterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertProperties_symbol_list" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  },
                  "properties" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertProperties_symbol_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "properties",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertPredToReadable_string" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "predString" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertPredToReadable_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "predString",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isEmpty_int_int" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "integer"
                  },
                  "y" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isEmpty_int_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "y",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCoordinateFrames" : {
      "post" : {
        "summary" : "Operation in CoordinateFramesInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCoordinateFrames",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "CoordinateFramesInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveTrajectoriesToFile_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveTrajectoriesToFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=suspendSystemGoals_symbol" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "suspendSystemGoals_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=beforeServiceWrapper_object[]" : {
      "post" : {
        "summary" : "Operation in TradeServiceTracker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "args" : {
                    "type" : "object[]"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "beforeServiceWrapper_object[]",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "object[]"
          },
          "name" : "args",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TradeServiceTracker" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPosture_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "targetPosture" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPosture_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "targetPosture",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getObservers_predicate" : {
      "post" : {
        "summary" : "Operation in ObserverDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "obs" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getObservers_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "obs",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ObserverDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=completion_string_prompt" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : "string"
                  },
                  "prompt" : {
                    "type" : "prompt"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "completion_string_prompt",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "model",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "prompt"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkLocationName_string" : {
      "post" : {
        "summary" : "Operation in Dictionary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkLocationName_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Dictionary" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGraphAssertions" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGraphAssertions",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goSouth" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goSouth",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=rejectUtterance" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "rejectUtterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLateAppointmentMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLateAppointmentMessage",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=display_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "display_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restRightArm" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restRightArm",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryAtTime_term_long" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  },
                  "time" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryAtTime_term_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "long"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion_chat" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "chat" : {
                    "type" : "chat"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion_chat",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "chat"
          },
          "name" : "chat",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelPendingGoalByIndex_int" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "index" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelPendingGoalByIndex_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "index",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=querySupportWithExplanation_term" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "querySupportWithExplanation_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=completion_string_string" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : "string"
                  },
                  "prompt" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "completion_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "model",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeEquality_term" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeEquality_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPose_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "linkName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPose_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "linkName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getNextGoalPredicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getNextGoalPredicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goNorth" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goNorth",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=positReference_symbol_term" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "propertiesList" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "positReference_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "propertiesList",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=releaseObject_string_symbol_float" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "refId" : {
                    "type" : "name:type"
                  },
                  "position" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "releaseObject_string_symbol_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "position",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEmotion" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEmotion",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unlearn_term" : {
      "post" : {
        "summary" : "Operation in LearningInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "learningTerm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unlearn_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "learningTerm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LearningInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelWaitForResponse_term" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelWaitForResponse_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "responseForm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=spaceStationLLMParser_string" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "spaceStationLLMParser_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "utterance",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToStartPose_boolean" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "safe" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToStartPose_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "safe",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isRepeatedPredicate_predicate_symbol_predicate_int" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "listener" : {
                    "type" : "name:type"
                  },
                  "state" : {
                    "type" : "predicate"
                  },
                  "word" : {
                    "type" : "predicate"
                  },
                  "recency" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isRepeatedPredicate_predicate_symbol_predicate_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "word",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "listener",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "recency",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoal_predicate_executiontype_prioritytier" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "priorityTier" : {
                    "type" : "prioritytier"
                  },
                  "g" : {
                    "type" : "predicate"
                  },
                  "type" : {
                    "type" : "executiontype"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoal_predicate_executiontype_prioritytier",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "executiontype"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "prioritytier"
          },
          "name" : "priorityTier",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokens_long_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  },
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokens_long_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interact_symbol_boolean" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "otherActor" : {
                    "type" : "name:type"
                  },
                  "expectTrades" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interact_symbol_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "otherActor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "expectTrades",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pauseActionLearning_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "newAction" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pauseActionLearning_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "newAction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=teleport_symbol_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "distance" : {
                    "type" : "name:type"
                  },
                  "targetY" : {
                    "type" : "name:type"
                  },
                  "targetX" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "teleport_symbol_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "targetX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "targetY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "distance",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEmotion_string" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "newEmo" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEmotion_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "newEmo",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=writeSenseAllJsonToFile_string" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filePreFix" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "writeSenseAllJsonToFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filePreFix",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTypeId_symbol" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTypeId_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=nameDescriptors_list_symbol" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptors" : {
                    "type" : "list"
                  },
                  "typeName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "nameDescriptors_list_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "descriptors",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "typeName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterForNewPropertyNotification_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterForNewPropertyNotification_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSimStateMachine_statemachine" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "sm" : {
                    "type" : "statemachine"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSimStateMachine_statemachine",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "statemachine"
          },
          "name" : "sm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findMatchingEntries_list_list" : {
      "post" : {
        "summary" : "Operation in Utilities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "entries" : {
                    "type" : "list"
                  },
                  "inputRoleTypes" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findMatchingEntries_list_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "entries",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "inputRoleTypes",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Utilities" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sendMessage_utterance" : {
      "post" : {
        "summary" : "Operation in ChatEndpointComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sendMessage_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "utterance",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ChatEndpointComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chargeTemi" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chargeTemi",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocationBackupSet_string" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "documentName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocationBackupSet_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "documentName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDictionaryEntries" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDictionaryEntries",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cookItem_symbol_term" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  },
                  "time" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cookItem_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptFollowBlocking" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptFollowBlocking",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createCogRefWithProperty_symbol_term" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "jobDescriptor" : {
                    "type" : "name:type"
                  },
                  "property" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createCogRefWithProperty_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "jobDescriptor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "property",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=blink" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "blink",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveTo_string_symbol" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveTo_string_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryFactsInTimeframe_term_long_long" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  },
                  "start" : {
                    "type" : "integer"
                  },
                  "end" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryFactsInTimeframe_term_long_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "long"
          },
          "name" : "start",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "long"
          },
          "name" : "end",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getStatusFromRef_symbol" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getStatusFromRef_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=writeASLToFirebase_actiondbentry_boolean" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "init" : {
                    "type" : "boolean"
                  },
                  "e" : {
                    "type" : "actiondbentry"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "writeASLToFirebase_actiondbentry_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "actiondbentry"
          },
          "name" : "e",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "init",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayTextDialogueHistory_string" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayTextDialogueHistory_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=savePerformanceMeasures_string_string_symbol" : {
      "post" : {
        "summary" : "Operation in PerformanceMeasuresDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  },
                  "agent" : {
                    "type" : "name:type"
                  },
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "savePerformanceMeasures_string_string_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "path",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PerformanceMeasuresDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorExitPosePath_symbol_double" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : "name:type"
                  },
                  "padding" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorExitPosePath_symbol_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "elevatorDoor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "padding",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initializeBeliefs" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initializeBeliefs",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableKidsMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableKidsMode",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=generateRE_symbol" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "generateRE_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "ref",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startPR2Repair_symbol" : {
      "post" : {
        "summary" : "Operation in UnityPR2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "target" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startPR2Repair_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "target",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnityPR2" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerForNewPropertyNotification_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerForNewPropertyNotification_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDepthFrame" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDepthFrame",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=reportNovelties_set" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "novelties" : {
                    "type" : "set"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "reportNovelties_set",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "set"
          },
          "name" : "novelties",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endDisplayFreezeScreen" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endDisplayFreezeScreen",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLowLevelPlan_goalcontext" : {
      "post" : {
        "summary" : "Operation in SimulationBasedPlanning",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalContext" : {
                    "type" : "goalcontext"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLowLevelPlan_goalcontext",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "goalcontext"
          },
          "name" : "goalContext",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SimulationBasedPlanning" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restLeftArm" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restLeftArm",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAllowAppointmentsUntil_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAllowAppointmentsUntil_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findPath_symbol_symbol_symbol_symbol_list" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "list"
                  },
                  "goalY" : {
                    "type" : "name:type"
                  },
                  "startY" : {
                    "type" : "name:type"
                  },
                  "goalX" : {
                    "type" : "name:type"
                  },
                  "startX" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findPath_symbol_symbol_symbol_symbol_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "startX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "startY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "goalX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "goalY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "path",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveDist_double" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dist" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveDist_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "dist",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=toggleShoppingCart" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "toggleShoppingCart",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAction_string_symbol_list" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "inputRoleTypes" : {
                    "type" : "list"
                  },
                  "type" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAction_string_symbol_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "inputRoleTypes",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endFreeze" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endFreeze",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=angleInterpolation_list_list_float_boolean" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "names" : {
                    "type" : "list"
                  },
                  "angles" : {
                    "type" : "list"
                  },
                  "isAbsolute" : {
                    "type" : "boolean"
                  },
                  "time" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "angleInterpolation_list_list_float_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "names",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "angles",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "isAbsolute",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeRL_string_string_boolean" : {
      "post" : {
        "summary" : "Operation in PolycraftRLComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "lastAction" : {
                    "type" : "string"
                  },
                  "failedAction" : {
                    "type" : "string"
                  },
                  "actionResult" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeRL_string_string_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "failedAction",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "lastAction",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "actionResult",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftRLComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=bindCognexResult_cognexreference_cognexresult_int" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "result" : {
                    "type" : "cognexresult"
                  },
                  "ref" : {
                    "type" : "cognexreference"
                  },
                  "indexIntoCognexResult" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "bindCognexResult_cognexreference_cognexresult_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "cognexreference"
          },
          "name" : "ref",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "cognexresult"
          },
          "name" : "result",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "indexIntoCognexResult",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=angleInterpolation_list_list_list_boolean" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "times" : {
                    "type" : "list"
                  },
                  "names" : {
                    "type" : "list"
                  },
                  "angles" : {
                    "type" : "list"
                  },
                  "isAbsolute" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "angleInterpolation_list_list_list_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "names",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "angles",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "times",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "isAbsolute",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableObstacleNotifications" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableObstacleNotifications",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractRule_term_list" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "head" : {
                    "type" : "term"
                  },
                  "body" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractRule_term_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "head",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "body",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=notifyActiveGoalUpdated_goal_updatetype_goalstatus" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : "goal"
                  },
                  "updateType" : {
                    "type" : "updatetype"
                  },
                  "status" : {
                    "type" : "goalstatus"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "notifyActiveGoalUpdated_goal_updatetype_goalstatus",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "goal"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "updatetype"
          },
          "name" : "updateType",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "goalstatus"
          },
          "name" : "status",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=changeLearningExecution_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "status" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "changeLearningExecution_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "status",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLex" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLex",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pressObject_string_point3d_quat4d" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "object_orientation" : {
                    "type" : "quat4d"
                  },
                  "group_name" : {
                    "type" : "string"
                  },
                  "object_location" : {
                    "type" : "point3d"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pressObject_string_point3d_quat4d",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "group_name",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "point3d"
          },
          "name" : "object_location",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "quat4d"
          },
          "name" : "object_orientation",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToLoc_symbol_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "escorting" : {
                    "type" : "boolean"
                  },
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToLoc_symbol_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "escorting",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=generateLocationRules_string_string_boolean" : {
      "post" : {
        "summary" : "Operation in Dictionary",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "semanticType" : {
                    "type" : "string"
                  },
                  "delete" : {
                    "type" : "boolean"
                  },
                  "base" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "generateLocationRules_string_string_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "base",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "semanticType",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "delete",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Dictionary" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableKioskMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableKioskMode",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getStateMachine" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getStateMachine",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSimObservation" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSimObservation",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getHistory" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getHistory",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokens_symbol" : {
      "post" : {
        "summary" : "Operation in VisionConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "objectRef" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokens_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "objectRef",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMService_string" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "serviceStr" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMService_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "serviceStr",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sauteItem_symbol_term" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  },
                  "time" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sauteItem_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSuccessFromRef_symbol" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSuccessFromRef_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=craft_term" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "recipe" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "craft_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "recipe",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentGoal_symbol_int" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actorToCheck" : {
                    "type" : "name:type"
                  },
                  "index" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentGoal_symbol_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actorToCheck",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "index",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pickAndPlaceLLMParser_string" : {
      "post" : {
        "summary" : "Operation in PickAndPlaceLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pickAndPlaceLLMParser_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "utterance",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PickAndPlaceLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPath_matrix4d_symbol_double_boolean" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "padding" : {
                    "type" : "number"
                  },
                  "canOpenDoors" : {
                    "type" : "boolean"
                  },
                  "curr" : {
                    "type" : "matrix4d"
                  },
                  "dest" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPath_matrix4d_symbol_double_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "matrix4d"
          },
          "name" : "curr",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "dest",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "padding",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "canOpenDoors",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onBeliefNotificationUpdate_string_map" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindingsStrings" : {
                    "type" : "map"
                  },
                  "queryTermString" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onBeliefNotificationUpdate_string_map",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "queryTermString",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "map"
          },
          "name" : "bindingsStrings",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getOperator_string_list" : {
      "post" : {
        "summary" : "Operation in OperatorDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "inputRoleTypes" : {
                    "type" : "list"
                  },
                  "type" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getOperator_string_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "inputRoleTypes",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "OperatorDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unityGetResponse_message" : {
      "post" : {
        "summary" : "Operation in UnityComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "msg" : {
                    "type" : "message"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unityGetResponse_message",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "message"
          },
          "name" : "msg",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnityComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedPostConditionsPolicy_symbol_predicate_list_predicate" : {
      "post" : {
        "summary" : "Operation in FailedPostConditionsPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "goal" : {
                    "type" : "predicate"
                  },
                  "brokenActionSignature" : {
                    "type" : "predicate"
                  },
                  "failureReasons" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedPostConditionsPolicy_symbol_predicate_list_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "brokenActionSignature",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "failureReasons",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FailedPostConditionsPolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=perceiveEntityFromSymbol_symbol" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "perceiveEntityFromSymbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokens_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokens_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=modifyAction_symbol_predicate_predicate_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "action" : {
                    "type" : "predicate"
                  },
                  "location" : {
                    "type" : "predicate"
                  },
                  "modification" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "modifyAction_symbol_predicate_predicate_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "action",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "modification",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeDiscrepancies_term" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeDiscrepancies_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=querySupport_term_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "querySupport_term_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPose_string_symbol" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "poseName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPose_string_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "poseName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelSystemGoals" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelSystemGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForResponse_predicate" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForResponse_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "responseForm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setTV_double" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tv" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setTV_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "tv",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptCheckIn" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptCheckIn",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=closeHand_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "closeHand_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=putAction_actiondbentry" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "entry" : {
                    "type" : "actiondbentry"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "putAction_actiondbentry",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "actiondbentry"
          },
          "name" : "entry",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesBroken_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "area" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesBroken_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "area",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDiarcAgents" : {
      "post" : {
        "summary" : "Operation in Database",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDiarcAgents",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Database" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayText_string_boolean" : {
      "post" : {
        "summary" : "Operation in SpeechProductionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "wait" : {
                    "type" : "boolean"
                  },
                  "text" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayText_string_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "text",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "wait",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SpeechProductionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=suspendGoal_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "suspendGoal_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion_symbol" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prompt" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getToken_long_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tokenId" : {
                    "type" : "integer"
                  },
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getToken_long_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "tokenId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayAnimated_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "annotatedText" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayAnimated_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "annotatedText",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addHomophone_string_string" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "homophone" : {
                    "type" : "string"
                  },
                  "base" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addHomophone_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "base",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "homophone",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=knowsLocation_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "knowsLocation_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPose_symbol" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "poseName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPose_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "poseName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAction_string" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAction_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEmptyProps" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEmptyProps",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isBusy" : {
      "post" : {
        "summary" : "Operation in PlanningAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isBusy",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PlanningAgent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=learn_term_list" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindings" : {
                    "type" : "list"
                  },
                  "learningTerm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "learn_term_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "learningTerm",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "bindings",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertBelief_term" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "belief" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertBelief_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "belief",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getViolations_symbol_statemachine" : {
      "post" : {
        "summary" : "Operation in NormComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "stateMachine" : {
                    "type" : "statemachine"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getViolations_symbol_statemachine",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "statemachine"
          },
          "name" : "stateMachine",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NormComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createCogRefWithProps_cognexjob_list" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "j" : {
                    "type" : "cognexjob"
                  },
                  "additionalProperties" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createCogRefWithProps_cognexjob_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "cognexjob"
          },
          "name" : "j",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "additionalProperties",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unityReceiveMessage_message" : {
      "post" : {
        "summary" : "Operation in UnityAgent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "msg" : {
                    "type" : "message"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unityReceiveMessage_message",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "message"
          },
          "name" : "msg",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnityAgent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkAt_term" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationTerm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkAt_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "locationTerm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateMap_term_list" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "bindings" : {
                    "type" : "list"
                  },
                  "atTerm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateMap_term_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "atTerm",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "bindings",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=answerQuestion_symbol_symbol_term" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "speaker" : {
                    "type" : "name:type"
                  },
                  "listener" : {
                    "type" : "name:type"
                  },
                  "answerSemantics" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "answerQuestion_symbol_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "speaker",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "listener",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "answerSemantics",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeSystemGoals" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeSystemGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getNearestElevatorDoors" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getNearestElevatorDoors",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLocationBackupSetNames" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLocationBackupSetNames",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion_list" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "messages" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "messages",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelGoal_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelGoal_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActivatedEntities" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActivatedEntities",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getRules" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getRules",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertRule_term_list" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "head" : {
                    "type" : "term"
                  },
                  "body" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertRule_term_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "head",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "body",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=objectObserver_term" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "objectObserver_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addLocalStaticTransform_string_string_matrix4d" : {
      "post" : {
        "summary" : "Operation in CoordinateFramesInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "parent" : {
                    "type" : "string"
                  },
                  "transform" : {
                    "type" : "matrix4d"
                  },
                  "child" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addLocalStaticTransform_string_string_matrix4d",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "parent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "child",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "matrix4d"
          },
          "name" : "transform",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CoordinateFramesInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=putDownItem_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pose" : {
                    "type" : "name:type"
                  },
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "putDownItem_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "pose",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=displayChargingAlert" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "displayChargingAlert",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endFreezeTemi" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endFreezeTemi",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=turnTo_double" : {
      "post" : {
        "summary" : "Operation in OrientationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tdest" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "turnTo_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "tdest",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "OrientationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getVoice" : {
      "post" : {
        "summary" : "Operation in VoiceProsodyInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getVoice",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VoiceProsodyInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveTo_string_point3d_quat4d" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "orientation" : {
                    "type" : "quat4d"
                  },
                  "point" : {
                    "type" : "point3d"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveTo_string_point3d_quat4d",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "point3d"
          },
          "name" : "point",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "quat4d"
          },
          "name" : "orientation",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=makeContextSalient_long" : {
      "post" : {
        "summary" : "Operation in ContextConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "makeContextSalient_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "id",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ContextConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=filterPointsNotInCurrentRoom_set" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locations" : {
                    "type" : "set"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "filterPointsNotInCurrentRoom_set",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "set"
          },
          "name" : "locations",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEntityForReference_symbol_class" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : "name:type"
                  },
                  "entityJavaType" : {
                    "type" : "class"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEntityForReference_symbol_class",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "ref",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "class"
          },
          "name" : "entityJavaType",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorButtonPose_symbol_double" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : "name:type"
                  },
                  "padding" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorButtonPose_symbol_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "elevatorDoor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "padding",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDoorEdges_symbol" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "door" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDoorEdges_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "door",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateDialogueHistory_utterance" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utt" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateDialogueHistory_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "utt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTransform_string_string" : {
      "post" : {
        "summary" : "Operation in CoordinateFramesInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "srcFrame" : {
                    "type" : "string"
                  },
                  "dstFrame" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTransform_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "srcFrame",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "dstFrame",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CoordinateFramesInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryCount_term" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryCount_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorPanelPose_symbol_double" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : "name:type"
                  },
                  "padding" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorPanelPose_symbol_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "elevatorDoor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "padding",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=joinOnGoal_long_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  },
                  "millis" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "joinOnGoal_long_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "long"
          },
          "name" : "millis",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pointHeadTo_float_float_float" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "number"
                  },
                  "y" : {
                    "type" : "number"
                  },
                  "z" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pointHeadTo_float_float_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "float"
          },
          "name" : "x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "y",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "z",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getControlState" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getControlState",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=trade_integer_term" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tradeRecipe" : {
                    "type" : "term"
                  },
                  "traderID" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "trade_integer_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "integer"
          },
          "name" : "traderID",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "tradeRecipe",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getFacts_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getFacts_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateFirebaseDialogueHistory_utterance" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "u" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateFirebaseDialogueHistory_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "u",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goWest" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goWest",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=openHand_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "openHand_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBirthdayMessage_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBirthdayMessage_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAssertedProperties_symbol" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAssertedProperties_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=generateExplorationsToTry_term" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "objectNovelty" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "generateExplorationsToTry_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "objectNovelty",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findDirectPath_symbol_symbol_symbol_symbol_list" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "list"
                  },
                  "goalY" : {
                    "type" : "name:type"
                  },
                  "startY" : {
                    "type" : "name:type"
                  },
                  "goalX" : {
                    "type" : "name:type"
                  },
                  "startX" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findDirectPath_symbol_symbol_symbol_symbol_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "startX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "startY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "goalX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "goalY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "path",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pauseCapture" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pauseCapture",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=dock_symbol" : {
      "post" : {
        "summary" : "Operation in DockingInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dockId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "dock_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "dockId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DockingInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeGoal_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeGoal_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableVoiceAck" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableVoiceAck",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertToType_symbol_class_list" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  },
                  "type" : {
                    "type" : "class"
                  },
                  "constraints" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertToType_symbol_class_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "class"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "constraints",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endRepositionLoop" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endRepositionLoop",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEarlyAppointmentMessage_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEarlyAppointmentMessage_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setSayTextBlocks_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setSayTextBlocks_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "value",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryLastSource_term" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryLastSource_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeRL_symbol_predicate_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in PolycraftRLComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "failurePredicate" : {
                    "type" : "predicate"
                  },
                  "brokenActionStatus" : {
                    "type" : "name:type"
                  },
                  "brokenActionPredicate" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeRL_symbol_predicate_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "brokenActionPredicate",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "brokenActionStatus",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "failurePredicate",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftRLComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertBeliefs_set" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "beliefs" : {
                    "type" : "set"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertBeliefs_set",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "set"
          },
          "name" : "beliefs",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setKioskLocation_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setKioskLocation_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBatteryChargedLevel_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "chargedLevel" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBatteryChargedLevel_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "chargedLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startAcknowledgeDisplay_string" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startAcknowledgeDisplay_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=closeVideo" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "closeVideo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=writeLocationToFirebase_string_hashmap" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locationData" : {
                    "type" : "hashmap"
                  },
                  "locationName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "writeLocationToFirebase_string_hashmap",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "locationName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "hashmap"
          },
          "name" : "locationData",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPromptText" : {
      "post" : {
        "summary" : "Operation in LLMNLComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPromptText",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "LLMNLComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=clearRecogntionHistory" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "clearRecogntionHistory",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pointTo_string_symbol" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "objectRef" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pointTo_string_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "objectRef",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSimStateMachine" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSimStateMachine",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayToFile_string_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  },
                  "text" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayToFile_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "text",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentGoals_symbol" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentGoals_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resolveReferences_utterance" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "utterance" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resolveReferences_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "utterance",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=delete_symbol" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "itemSymbol" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "delete_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "itemSymbol",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=learnAction_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "newAction" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "learnAction_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "newAction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=lastCart" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "lastCart",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setVels_double_double" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tv" : {
                    "type" : "number"
                  },
                  "rv" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setVels_double_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "tv",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "rv",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=querySupportWithExplanation_term_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "querySupportWithExplanation_term_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSystemGoalsPredicates" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSystemGoalsPredicates",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAllowAppointmentsSince_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAllowAppointmentsSince_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=translate_int" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "contextID" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "translate_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "contextID",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=injectDictionaryEntry_string_string_string_string" : {
      "post" : {
        "summary" : "Operation in PickAndPlaceLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "morpheme" : {
                    "type" : "string"
                  },
                  "cognitiveStatus" : {
                    "type" : "string"
                  },
                  "semantics" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "injectDictionaryEntry_string_string_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "morpheme",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "semantics",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "cognitiveStatus",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PickAndPlaceLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onDictionaryEntriesUpdated_set" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "keys" : {
                    "type" : "set"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onDictionaryEntriesUpdated_set",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "set"
          },
          "name" : "keys",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeFluent_symbol_term" : {
      "post" : {
        "summary" : "Operation in OperatorCheck",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeFluent_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "OperatorCheck" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=ledOff_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "ledOff_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentPlan" : {
      "post" : {
        "summary" : "Operation in Planner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentPlan",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Planner" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelCurrentRapidAction" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelCurrentRapidAction",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=notifyPendingGoalUpdated_goal_int_updatetype" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : "goal"
                  },
                  "index" : {
                    "type" : "integer"
                  },
                  "updateType" : {
                    "type" : "updatetype"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "notifyPendingGoalUpdated_goal_int_updatetype",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "goal"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "index",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "updatetype"
          },
          "name" : "updateType",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkMotion_long" : {
      "post" : {
        "summary" : "Operation in NavigationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "aid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkMotion_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "aid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NavigationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setPoseGlobal_double_double_double" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "number"
                  },
                  "y" : {
                    "type" : "number"
                  },
                  "theta" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setPoseGlobal_double_double_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "y",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "theta",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=closeGripper_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "closeGripper_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDescriptors_long" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDescriptors_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getElevatorExitPose_symbol_double" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "elevatorDoor" : {
                    "type" : "name:type"
                  },
                  "padding" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getElevatorExitPose_symbol_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "elevatorDoor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "padding",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokenIds_long_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  },
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokenIds_long_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=updateResolverPropertiesHandled" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "updateResolverPropertiesHandled",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addDropoffPose_string_string_string" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "propertyName" : {
                    "type" : "string"
                  },
                  "poseString" : {
                    "type" : "string"
                  },
                  "cameraPoseName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addDropoffPose_string_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "propertyName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "cameraPoseName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "poseString",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveGripper_string_float" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "meters" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveGripper_string_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "meters",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onAgentActionUpdated_string_string_string" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "string"
                  },
                  "goal" : {
                    "type" : "string"
                  },
                  "status" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onAgentActionUpdated_string_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "status",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getNextGoalPredicate_symbol" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getNextGoalPredicate_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkIgnoreTentativeAccept_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalPred" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkIgnoreTentativeAccept_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goalPred",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endDescriptorChanges_long" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endDescriptorChanges_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkObstacle" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkObstacle",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedToPlanPolicy_symbol_predicate_list_predicate" : {
      "post" : {
        "summary" : "Operation in FailedToPlanPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "goal" : {
                    "type" : "predicate"
                  },
                  "brokenActionSignature" : {
                    "type" : "predicate"
                  },
                  "failureReasons" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedToPlanPolicy_symbol_predicate_list_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "brokenActionSignature",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "failureReasons",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FailedToPlanPolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setCurrentFloor_int" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "newFloor" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setCurrentFloor_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "newFloor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMEndpoint_symbol" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "endpoint" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMEndpoint_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "endpoint",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPos_list_symbol_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalCoords" : {
                    "type" : "list"
                  },
                  "clearScreen" : {
                    "type" : "boolean"
                  },
                  "destination" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPos_list_symbol_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "goalCoords",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "destination",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "clearScreen",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAppointmentLoadErrorMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAppointmentLoadErrorMessage",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCognexJobForDescriptor_symbol" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCognexJobForDescriptor_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertBeliefs_set_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "beliefs" : {
                    "type" : "set"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertBeliefs_set_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "set"
          },
          "name" : "beliefs",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDisplayAppointmentsSince" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDisplayAppointmentsSince",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSystemGoalsPredicates_symbol" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSystemGoalsPredicates_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelAllActiveGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelAllActiveGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalFailConditions_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalFailConditions_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : "name:type"
                  },
                  "prompt" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "model",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=onActionGenerated_actiondbentry_boolean" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "actiondbentry"
                  },
                  "onStartup" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "onActionGenerated_actiondbentry_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "actiondbentry"
          },
          "name" : "action",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "onStartup",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getUnsatisfiableConstraints_list" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptors" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getUnsatisfiableConstraints_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "descriptors",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubesDamaged" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubesDamaged",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isMoving" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isMoving",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveTo_string_symbol_list" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "refId" : {
                    "type" : "name:type"
                  },
                  "constraints" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveTo_string_symbol_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "constraints",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=clear" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "clear",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=itemWeightGreaterThan_symbol" : {
      "post" : {
        "summary" : "Operation in ScaleComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "itemWeightGreaterThan_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "value",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ScaleComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerNotification_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerNotification_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setGameOver_boolean" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalAchieved" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setGameOver_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "goalAchieved",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDefaultVels" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDefaultVels",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=use" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "use",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeSystemGoals_symbol" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeSystemGoals_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disablePrivacyMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disablePrivacyMode",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelAllSystemGoals" : {
      "post" : {
        "summary" : "Operation in QueueExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelAllSystemGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "QueueExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getBirthdayMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getBirthdayMessage",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=parseUtterance_utterance" : {
      "post" : {
        "summary" : "Operation in PatternMatchingParser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "u" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "parseUtterance_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "u",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PatternMatchingParser" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActiveGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActiveGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToLocation_symbol_boolean" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "wait" : {
                    "type" : "boolean"
                  },
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToLocation_symbol_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "wait",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=disableSim" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "disableSim",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableKidsMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableKidsMode",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=approachLocation_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "initialLocation" : {
                    "type" : "name:type"
                  },
                  "desiredLocation" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "approachLocation_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "desiredLocation",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "initialLocation",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getUnsatisfiableConstraints_symbol" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getUnsatisfiableConstraints_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=recordPose_symbol" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "poseName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "recordPose_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "poseName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resetMap" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resetMap",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setGrammar_string" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setGrammar_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "path",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEntityForReference_symbol_class_list" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : "name:type"
                  },
                  "entityJavaType" : {
                    "type" : "class"
                  },
                  "constraints" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEntityForReference_symbol_class_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "ref",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "class"
          },
          "name" : "entityJavaType",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "constraints",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBirthdayMessageRange_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "range" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBirthdayMessageRange_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "range",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeCapture" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeCapture",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isQuestionResponse_symbol_symbol_term" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "speaker" : {
                    "type" : "name:type"
                  },
                  "listener" : {
                    "type" : "name:type"
                  },
                  "semantics" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isQuestionResponse_symbol_symbol_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "speaker",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "listener",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "term"
          },
          "name" : "semantics",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoalWithMetric_predicate_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metric" : {
                    "type" : "predicate"
                  },
                  "g" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoalWithMetric_predicate_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "metric",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addRelevantDisplayAction_string" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addRelevantDisplayAction_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getFirebaseVideoNames" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getFirebaseVideoNames",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=removeActionsWithSignature_predicate" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actionSignature" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "removeActionsWithSignature_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "actionSignature",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=receivedNoveltySignal" : {
      "post" : {
        "summary" : "Operation in NovelRunComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "receivedNoveltySignal",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NovelRunComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createWeightGoal_symbol" : {
      "post" : {
        "summary" : "Operation in Forklift",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createWeightGoal_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Forklift" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGroupName" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGroupName",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractBelief_term_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "belief" : {
                    "type" : "term"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractBelief_term_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "belief",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllAgentTeams" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllAgentTeams",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEscortWaitAttempts" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEscortWaitAttempts",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pickupItem_symbol" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pickupItem_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion_symbol_chat" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "chat" : {
                    "type" : "chat"
                  },
                  "model" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion_symbol_chat",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "model",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "chat"
          },
          "name" : "chat",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=turnDist_double" : {
      "post" : {
        "summary" : "Operation in OrientationInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dist" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "turnDist_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "dist",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "OrientationInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=beliefNotificationCallback_term_list" : {
      "post" : {
        "summary" : "Operation in UIComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  },
                  "bindings" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "beliefNotificationCallback_term_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "bindings",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UIComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findDirectPath_int_int_int_int" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goalY" : {
                    "type" : "integer"
                  },
                  "startY" : {
                    "type" : "integer"
                  },
                  "goalX" : {
                    "type" : "integer"
                  },
                  "startX" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findDirectPath_int_int_int_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "startX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "startY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "goalX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "goalY",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryRecency_term" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryRecency_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setObservation_object" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "observation" : {
                    "type" : "object"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setObservation_object",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "object"
          },
          "name" : "observation",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToLocation_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "initialLocation" : {
                    "type" : "name:type"
                  },
                  "desiredLocation" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToLocation_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "desiredLocation",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "initialLocation",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setAppointmentLoadErrorMessage_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setAppointmentLoadErrorMessage_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoal_predicate_executiontype_prioritytier_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "priorityTier" : {
                    "type" : "prioritytier"
                  },
                  "g" : {
                    "type" : "predicate"
                  },
                  "type" : {
                    "type" : "executiontype"
                  },
                  "priority" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoal_predicate_executiontype_prioritytier_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "executiontype"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "prioritytier"
          },
          "name" : "priorityTier",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "long"
          },
          "name" : "priority",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteLocationBackup_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteLocationBackup_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "collectionName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveToRelative_string_point3d_quat4d" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  },
                  "orientation" : {
                    "type" : "quat4d"
                  },
                  "point" : {
                    "type" : "point3d"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveToRelative_string_point3d_quat4d",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "point3d"
          },
          "name" : "point",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "quat4d"
          },
          "name" : "orientation",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getActionStatus_long" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "gid" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getActionStatus_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "gid",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sendPositionUpdate" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sendPositionUpdate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getMyGroups" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getMyGroups",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPixelPositionInRobotFrame_int_int_int_int_int" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pX" : {
                    "type" : "integer"
                  },
                  "width" : {
                    "type" : "integer"
                  },
                  "pY" : {
                    "type" : "integer"
                  },
                  "camID" : {
                    "type" : "integer"
                  },
                  "height" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPixelPositionInRobotFrame_int_int_int_int_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "pX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "pY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "width",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "height",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "camID",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=followMe" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "followMe",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=LLMListenSpaceStationFinetune_string" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "LLMListenSpaceStationFinetune_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoal_predicate_executiontype" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : "predicate"
                  },
                  "type" : {
                    "type" : "executiontype"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoal_predicate_executiontype",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "executiontype"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerForDialogueHistoryNotifications_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerForDialogueHistoryNotifications_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLateAppointmentMessage_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "message" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLateAppointmentMessage_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=learn_term" : {
      "post" : {
        "summary" : "Operation in LearningInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "learningTerm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "learn_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "learningTerm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LearningInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerAIListener_actionlistener" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "al" : {
                    "type" : "actionlistener"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerAIListener_actionlistener",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "actionlistener"
          },
          "name" : "al",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addDetectionType_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "jobName" : {
                    "type" : "name:type"
                  },
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addDetectionType_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "jobName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getRV" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getRV",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentGoals_goal" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queryGoal" : {
                    "type" : "goal"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentGoals_goal",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "goal"
          },
          "name" : "queryGoal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=initializeNovelty_term" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "novelty" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "initializeNovelty_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "novelty",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=afterServiceWrapper_object[]" : {
      "post" : {
        "summary" : "Operation in TradeServiceTracker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "args" : {
                    "type" : "object[]"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "afterServiceWrapper_object[]",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "object[]"
          },
          "name" : "args",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TradeServiceTracker" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restoreLocationsFromBackup_string" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "documentName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restoreLocationsFromBackup_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "documentName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stop" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stop",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCognexReferenceForID_symbol" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCognexReferenceForID_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterForDialogueHistoryNotifications_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterForDialogueHistoryNotifications_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPropertiesHandled" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPropertiesHandled",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getGoalManagerHandler" : {
      "post" : {
        "summary" : "Operation in GoalManagerEndpointComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getGoalManagerHandler",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerEndpointComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resetGame" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resetGame",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPR2Area" : {
      "post" : {
        "summary" : "Operation in UnityPR2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPR2Area",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnityPR2" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelActionLearning_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "newAction" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelActionLearning_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "newAction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=collect" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "collect",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=openGripperRapid" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "openGripperRapid",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=angleInterpolation_string_float_float_boolean" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "angle" : {
                    "type" : "number"
                  },
                  "isAbsolute" : {
                    "type" : "boolean"
                  },
                  "time" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "angleInterpolation_string_float_float_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "angle",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "isAbsolute",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pointTo_float_float_float" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "number"
                  },
                  "y" : {
                    "type" : "number"
                  },
                  "z" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pointTo_float_float_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "float"
          },
          "name" : "x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "y",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "z",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=giveUp" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "giveUp",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=ledOn_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "ledOn_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeFacingObject_term" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeFacingObject_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getQuestionFromRefs_symbol_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in RequestFromHumanComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "itemType" : {
                    "type" : "name:type"
                  },
                  "toPoseRef" : {
                    "type" : "name:type"
                  },
                  "fromPoseRef" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getQuestionFromRefs_symbol_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "itemType",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "fromPoseRef",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "toPoseRef",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RequestFromHumanComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveTo_float_float_float" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "number"
                  },
                  "y" : {
                    "type" : "number"
                  },
                  "theta" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveTo_float_float_float",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "float"
          },
          "name" : "x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "y",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "float"
          },
          "name" : "theta",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPriorityTierForGoal_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPriorityTierForGoal_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createReferences_list" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "vars" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createReferences_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "vars",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=rest" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "rest",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addNewWord_string_byte[]" : {
      "post" : {
        "summary" : "Operation in MaryTTSComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "word" : {
                    "type" : "string"
                  },
                  "pcmData" : {
                    "type" : "byte[]"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addNewWord_string_byte[]",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "word",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "byte[]"
          },
          "name" : "pcmData",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MaryTTSComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addHomophone_string_string_boolean" : {
      "post" : {
        "summary" : "Operation in TLDLParserComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "writeToFile" : {
                    "type" : "boolean"
                  },
                  "homophone" : {
                    "type" : "string"
                  },
                  "base" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addHomophone_string_string_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "base",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "homophone",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "writeToFile",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TLDLParserComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getFrame" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getFrame",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=relocalize_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "sayText" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "relocalize_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "sayText",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=completion_string" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prompt" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "completion_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setEscortWaitAttempts_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "waitAttempts" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setEscortWaitAttempts_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "waitAttempts",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=fillAction_actiondbentry_string_boolean" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "a" : {
                    "type" : "actiondbentry"
                  },
                  "arg" : {
                    "type" : "string"
                  },
                  "bytwo" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "fillAction_actiondbentry_string_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "actiondbentry"
          },
          "name" : "a",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "arg",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "bytwo",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptGoToLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptGoToLocation",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTransform_string" : {
      "post" : {
        "summary" : "Operation in CoordinateFramesInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "dstFrame" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTransform_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "dstFrame",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CoordinateFramesInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentDomain" : {
      "post" : {
        "summary" : "Operation in Planner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentDomain",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "Planner" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setHardButtons_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "disabled" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setHardButtons_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "disabled",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=actionExists_predicate" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "goal" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "actionExists_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableVoiceAck" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableVoiceAck",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToLocation_double_double_double_double_double_double_boolean" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "xdest" : {
                    "type" : "number"
                  },
                  "quat_z" : {
                    "type" : "number"
                  },
                  "quat_x" : {
                    "type" : "number"
                  },
                  "wait" : {
                    "type" : "boolean"
                  },
                  "ydest" : {
                    "type" : "number"
                  },
                  "quat_y" : {
                    "type" : "number"
                  },
                  "quat_w" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToLocation_double_double_double_double_double_double_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "double"
          },
          "name" : "xdest",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "ydest",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "quat_x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "quat_y",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "quat_z",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "quat_w",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "wait",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=defineGraspPointForDescriptor_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "itemType" : {
                    "type" : "name:type"
                  },
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "defineGraspPointForDescriptor_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "itemType",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopMoving" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopMoving",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interactWithObject" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interactWithObject",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSuccessfulCheckInMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSuccessfulCheckInMessage",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBatteryWarnLevel_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "warnLevel" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBatteryWarnLevel_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "warnLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopAndRemoveType_long" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopAndRemoveType_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=selectItem_symbol" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "item" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "selectItem_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "item",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=showTopBar" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "showTopBar",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAgentType" : {
      "post" : {
        "summary" : "Operation in AgentModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAgentType",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "AgentModel" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stylizeUnitySpeak_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStationLLM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "original" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stylizeUnitySpeak_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "original",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStationLLM" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMEndpoint_string" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "endpoint" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMEndpoint_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "endpoint",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTV" : {
      "post" : {
        "summary" : "Operation in VelocityInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTV",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VelocityInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=backupLocations_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "backupLocations_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "collectionName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeExploration_predicate" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "explorationToTry" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeExploration_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "explorationToTry",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=loadPosesFromFile_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "loadPosesFromFile_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "filename",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enablePrivacyMode" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enablePrivacyMode",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPastGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPastGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getBirthdayMessageRange" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getBirthdayMessageRange",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setControlState_controlstate" : {
      "post" : {
        "summary" : "Operation in Sphinx4Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "controlstate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setControlState_controlstate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "controlstate"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Sphinx4Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForMeasurement_symbol" : {
      "post" : {
        "summary" : "Operation in ScaleComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForMeasurement_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "value",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ScaleComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=checkFloorSupport" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "checkFloorSupport",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unitySendMessage_message" : {
      "post" : {
        "summary" : "Operation in UnityComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "msg" : {
                    "type" : "message"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unitySendMessage_message",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "message"
          },
          "name" : "msg",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnityComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPendingGoalsPredicates" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPendingGoalsPredicates",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationHealth" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationHealth",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeBroken_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeBroken_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "tube",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeActionLearning_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "newAction" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeActionLearning_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "newAction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getMapComponent" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getMapComponent",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getObservers_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ObserverDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "obs" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getObservers_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "obs",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ObserverDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=reportRecognizedSpeech_utterance" : {
      "post" : {
        "summary" : "Operation in ListenerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "input" : {
                    "type" : "utterance"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "reportRecognizedSpeech_utterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "utterance"
          },
          "name" : "input",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ListenerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCognexJobForCognexReference_cognexreference" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : "cognexreference"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCognexJobForCognexReference_cognexreference",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "cognexreference"
          },
          "name" : "ref",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endQRCodeDisplay" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endQRCodeDisplay",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=registerForNotification_term_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queryTerm" : {
                    "type" : "term"
                  },
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "registerForNotification_term_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "queryTerm",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restartAllStoppedSearches" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restartAllStoppedSearches",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMService_symbol" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "service" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMService_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "service",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=senseHint" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "senseHint",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=saveCurrentLocationsAsBackupSet_string" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "collectionName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "saveCurrentLocationsAsBackupSet_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "collectionName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getKBName" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getKBName",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToLocation_symbol" : {
      "post" : {
        "summary" : "Operation in MoveBaseInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "location" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToLocation_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "location",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "MoveBaseInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDisplayAppointmentsUntil" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDisplayAppointmentsUntil",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getLastBrokenAction" : {
      "post" : {
        "summary" : "Operation in ExplorationComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getLastBrokenAction",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ExplorationComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=uploadMap_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "overwrite" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "uploadMap_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "overwrite",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=convertToType_symbol_class" : {
      "post" : {
        "summary" : "Operation in ConsultantInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  },
                  "type" : {
                    "type" : "class"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "convertToType_symbol_class",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "class"
          },
          "name" : "type",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ConsultantInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryBelief_term" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryBelief_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=pressObject_string_symbol" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "group_name" : {
                    "type" : "string"
                  },
                  "refID" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "pressObject_string_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "group_name",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refID",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrFloor" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrFloor",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopPR2Repair_symbol" : {
      "post" : {
        "summary" : "Operation in UnityPR2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "target" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopPR2Repair_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "target",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnityPR2" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=findPath_int_int_int_int_list" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "path" : {
                    "type" : "list"
                  },
                  "goalY" : {
                    "type" : "integer"
                  },
                  "startY" : {
                    "type" : "integer"
                  },
                  "goalX" : {
                    "type" : "integer"
                  },
                  "startX" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "findPath_int_int_int_int_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "startX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "startY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "goalX",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "goalY",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "path",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryBelief_list_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queries" : {
                    "type" : "list"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryBelief_list_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "queries",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllActions" : {
      "post" : {
        "summary" : "Operation in ActionDatabase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllActions",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ActionDatabase" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=addCameraPose_string_string" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "propertyName" : {
                    "type" : "string"
                  },
                  "poseString" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "addCameraPose_string_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "propertyName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "string"
          },
          "name" : "poseString",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeHealth_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeHealth_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "tube",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableObstacleNotifications" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableObstacleNotifications",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAvailableTypeIds" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAvailableTypeIds",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToPoseName_string" : {
      "post" : {
        "summary" : "Operation in RWSRobotComponentInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "poseName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToPoseName_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "poseName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "RWSRobotComponentInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isBreakable_symbol_symbol" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "locx" : {
                    "type" : "name:type"
                  },
                  "locy" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isBreakable_symbol_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "locx",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "locy",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=startType_long" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "startType_long",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=chatCompletion_string" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prompt" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "chatCompletion_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractRule_term_list_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "head" : {
                    "type" : "term"
                  },
                  "body" : {
                    "type" : "list"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractRule_term_list_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "head",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "body",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllowAppointmentsSince" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllowAppointmentsSince",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=resumeWaitForResponse_term" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "resumeWaitForResponse_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "responseForm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryBelief_term_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryBelief_term_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=suspendWaitForResponse_term" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "responseForm" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "suspendWaitForResponse_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "responseForm",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=stopUtterance" : {
      "post" : {
        "summary" : "Operation in SpeechProductionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "stopUtterance",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SpeechProductionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=removeReference_symbol" : {
      "post" : {
        "summary" : "Operation in CognexConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "removeReference_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "CognexConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=retractRule_term" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "head" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "retractRule_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "head",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getRules_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getRules_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTokens_list_double" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "descriptors" : {
                    "type" : "list"
                  },
                  "conf" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTokens_list_double",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "descriptors",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "double"
          },
          "name" : "conf",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getDialogueHistory" : {
      "post" : {
        "summary" : "Operation in DialogueComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getDialogueHistory",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "DialogueComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=smoothMove_symbol" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "direction" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "smoothMove_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "direction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=submitGoal_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "submitGoal_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deleteVideoFromFirebase_string" : {
      "post" : {
        "summary" : "Operation in FirebaseConnectionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "videoName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deleteVideoFromFirebase_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "videoName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FirebaseConnectionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=assertRule_term_list_memorylevel" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "head" : {
                    "type" : "term"
                  },
                  "body" : {
                    "type" : "list"
                  },
                  "memoryLevel" : {
                    "type" : "memorylevel"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "assertRule_term_list_memorylevel",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "head",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "body",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "memorylevel"
          },
          "name" : "memoryLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endActionLearning_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "newAction" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endActionLearning_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "newAction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=interruptSaveLocation" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "interruptSaveLocation",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getProperties_symbol" : {
      "post" : {
        "summary" : "Operation in ReferenceResolutionComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ref" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getProperties_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "ref",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ReferenceResolutionComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllDiarcAgentsForActor_symbol_boolean" : {
      "post" : {
        "summary" : "Operation in BeliefComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "groupFormat" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllDiarcAgentsForActor_symbol_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "groupFormat",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryRecentFacts_term_int" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  },
                  "n" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryRecentFacts_term_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "n",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=moveTo_string_point3d_quat4d_point3d_quat4d" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "orientation_l" : {
                    "type" : "quat4d"
                  },
                  "groupName" : {
                    "type" : "string"
                  },
                  "point_l" : {
                    "type" : "point3d"
                  },
                  "point_r" : {
                    "type" : "point3d"
                  },
                  "orientation_r" : {
                    "type" : "quat4d"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "moveTo_string_point3d_quat4d_point3d_quat4d",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "point3d"
          },
          "name" : "point_l",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "quat4d"
          },
          "name" : "orientation_l",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "point3d"
          },
          "name" : "point_r",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "quat4d"
          },
          "name" : "orientation_r",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getReference_symbol" : {
      "post" : {
        "summary" : "Operation in Consultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "refId" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getReference_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "refId",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "Consultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getTrialTime" : {
      "post" : {
        "summary" : "Operation in NovelRunComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getTrialTime",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NovelRunComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=nameDescriptors_long_symbol" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeName" : {
                    "type" : "name:type"
                  },
                  "typeId" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "nameDescriptors_long_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "typeName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=restartApp" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "restartApp",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=aisleObserver_term" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "aisleObserver_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAppointmentListEmptyMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAppointmentListEmptyMessage",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAngle_string" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAngle_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "name",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=queryBelief_list" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "queries" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "queryBelief_list",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "list"
          },
          "name" : "queries",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=completion_prompt" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "prompt" : {
                    "type" : "prompt"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "completion_prompt",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "prompt"
          },
          "name" : "prompt",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=goToNearestElevator" : {
      "post" : {
        "summary" : "Operation in MapComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "goToNearestElevator",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "MapComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getContextForGoal_predicate" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "g" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getContextForGoal_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "g",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=observeNextTo_term" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "state" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "observeNextTo_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "state",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=querySupport_term" : {
      "post" : {
        "summary" : "Operation in BeliefInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "query" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "querySupport_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "query",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "BeliefInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=deactivatePattern_string" : {
      "post" : {
        "summary" : "Operation in PatternMatchingParser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "patternName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "deactivatePattern_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "patternName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PatternMatchingParser" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=openGripper_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "groupName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "openGripper_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "groupName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=createNewType" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "createNewType",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setBatteryAbortLevel_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "abortLevel" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setBatteryAbortLevel_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "abortLevel",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentGoals" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentGoals",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getCurrentContextCount" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getCurrentContextCount",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isPassable_int_int" : {
      "post" : {
        "summary" : "Operation in PathPlannerComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "x" : {
                    "type" : "integer"
                  },
                  "y" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isPassable_int_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "x",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "int"
          },
          "name" : "y",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PathPlannerComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=unregisterNotification_tradeserviceinfo" : {
      "post" : {
        "summary" : "Operation in GoalManagerImpl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "callback" : {
                    "type" : "tradeserviceinfo"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "unregisterNotification_tradeserviceinfo",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "tradeserviceinfo"
          },
          "name" : "callback",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "GoalManagerImpl" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getAllowAppointmentsUntil" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getAllowAppointmentsUntil",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=confirmToken_memoryobject" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "memoryobject"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "confirmToken_memoryobject",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "memoryobject"
          },
          "name" : "token",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getSpaceStationTubeDamaged_symbol" : {
      "post" : {
        "summary" : "Operation in UnitySpaceStation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "tube" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getSpaceStationTubeDamaged_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "tube",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "UnitySpaceStation" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getChatHandler" : {
      "post" : {
        "summary" : "Operation in ChatEndpointComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getChatHandler",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "ChatEndpointComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setDisplayAppointmentsSince_symbol" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "time" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setDisplayAppointmentsSince_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "time",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeTrajectory_string" : {
      "post" : {
        "summary" : "Operation in ArmInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "trajectoryName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeTrajectory_string",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "trajectoryName",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ArmInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=waitForActionLearningStart_symbol_predicate" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  },
                  "newAction" : {
                    "type" : "predicate"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "waitForActionLearningStart_symbol_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "newAction",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=endFreeze_symbol" : {
      "post" : {
        "summary" : "Operation in ExecutionManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "agent" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "endFreeze_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "agent",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "ExecutionManager" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=senseRecipe" : {
      "post" : {
        "summary" : "Operation in PolycraftComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "senseRecipe",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "PolycraftComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=sayTextDialogueHistory_string_boolean" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "wait" : {
                    "type" : "boolean"
                  },
                  "message" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "sayTextDialogueHistory_string_boolean",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "string"
          },
          "name" : "message",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "boolean"
          },
          "name" : "wait",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=makeObservations_term" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "observation" : {
                    "type" : "term"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "makeObservations_term",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "term"
          },
          "name" : "observation",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=setLLMModel_symbol" : {
      "post" : {
        "summary" : "Operation in LLMComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "model" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "setLLMModel_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "model",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "LLMComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=cancelInteraction" : {
      "post" : {
        "summary" : "Operation in SupermarketInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "cancelInteraction",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getPostureList" : {
      "post" : {
        "summary" : "Operation in NaoInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getPostureList",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "NaoInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=removeDescriptor_long_symbol" : {
      "post" : {
        "summary" : "Operation in VisionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "typeId" : {
                    "type" : "integer"
                  },
                  "descriptor" : {
                    "type" : "name:type"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "removeDescriptor_long_symbol",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "long"
          },
          "name" : "typeId",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "descriptor",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "VisionInterface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=externalUpdateReferenceNumber_int" : {
      "post" : {
        "summary" : "Operation in PoseConsultant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "externalCurrentRefNumber" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "externalUpdateReferenceNumber_int",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "int"
          },
          "name" : "externalCurrentRefNumber",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "PoseConsultant" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=getEarlyAppointmentMessage" : {
      "post" : {
        "summary" : "Operation in TemiV3Interface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "getEarlyAppointmentMessage",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "TemiV3Interface" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=enableSim" : {
      "post" : {
        "summary" : "Operation in SupermarketComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "enableSim",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SupermarketComponent" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=executeFailedReturnValuePolicy_symbol_predicate_list_predicate" : {
      "post" : {
        "summary" : "Operation in FailedReturnValuePolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actor" : {
                    "type" : "name:type"
                  },
                  "goal" : {
                    "type" : "predicate"
                  },
                  "brokenActionSignature" : {
                    "type" : "predicate"
                  },
                  "failureReasons" : {
                    "type" : "list"
                  }
                }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "executeFailedReturnValuePolicy_symbol_predicate_list_predicate",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ {
          "schema" : {
            "type" : "symbol"
          },
          "name" : "actor",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "brokenActionSignature",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "list"
          },
          "name" : "failureReasons",
          "in" : "query",
          "required" : false
        }, {
          "schema" : {
            "type" : "predicate"
          },
          "name" : "goal",
          "in" : "query",
          "required" : false
        } ],
        "tags" : [ "FailedReturnValuePolicy" ],
        "consumes" : [ "application/json" ]
      }
    },
    "/invoke-service?serviceName=isSpeaking" : {
      "post" : {
        "summary" : "Operation in SpeechProductionInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : { }
              }
            }
          }
        },
        "produces" : [ "application/json" ],
        "operationId" : "isSpeaking",
        "responses" : {
          "default" : {
            "description" : "Unexpected error"
          },
          "200" : {
            "description" : "Successful operation"
          }
        },
        "parameters" : [ ],
        "tags" : [ "SpeechProductionInterface" ],
        "consumes" : [ "application/json" ]
      }
    }
  },
  "info" : {
    "title" : "TRADE Service API",
    "description" : "Generated API Documentation",
    "version" : "1.0.0"
  }
}